jQuery(document).ready(function($) {
  set_table_sorting();
});

/*
 *   Set up table sorting using Stupid Table: 
 *   https://github.com/joequery/Stupid-Table-Plugin
 */
function set_table_sorting(){
  var query_results_table = $('#query_results_table').stupidtable();
  query_results_table.bind('aftertablesort', aftertablesort);
}

/*
 *   Trigged callback to update the sort arrows after the 
 *   stupid table gets sorted.
 */
function aftertablesort(event, data) {
  //Loop through all the table headers
  var ths = $(this).find("th");
  for (var i = 0; i<ths.length;i++){
    //Skip this column if it is not marked as sortable
    if ($(ths[i]).attr('data-sort') == undefined){
      continue;
    }
    //Remove the old sort arrow
    //$(ths[i]).find(".sort_arrow").remove();
    //If this is the sorted column, add an ascending or descending arrow
    if (i == data.column){
      //Add an ascending sort arrow if ascending
      if (data.direction == 'asc'){
        //$(ths[i]).find(".sort_arrow").remove();
        html = '<%= image_tag('ascending_sort_arrow.png',:class => 'sort_arrow') %>';
        $(ths[i]).find('.sort-arrow-td').html(html);
      }
      //Add a descending sort arrow if descending
      else{
        html = '<%= image_tag('descending_sort_arrow.png',:class => 'sort_arrow') %>';
        $(ths[i]).find('.sort-arrow-td').html(html);
      }
    }
    //If not the sorted column, add a neutral sort arrow
    else{
      html = '<%= image_tag('neutral_sort_arrow.png',:class => 'sort_arrow') %>';
        $(ths[i]).find('.sort-arrow-td').html(html);
    }
  }
}
