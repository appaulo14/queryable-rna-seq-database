<h2>Enter a Query Sequence</h2>
<!--Enter or upload fasta sequence-->
<p>
    <%= bq.label :fasta_sequence, "Enter sequence below in FASTA format" %><br/>
    <%= bq.text_area :fasta_sequence, {:cols=>80, :rows => 6} %><br/>
    <%= bq.label :fasta_file, "Or load it from disk" %>
    <%= bq.file_field :fasta_file %><br/>
</p>
<!--Select a subsequence of the fasta to use-->
<!--<p>
Set subsequence: 
    <%= bq.label :subsequence_from, "From" %><%= bq.text_field :subsequence_from %>
    <%= bq.label :subsequence_to, "To" %><%= bq.text_field :subsequence_to %>
</p>-->
<p><%= button_tag("Clear Sequence", :onclick=>"clear_sequence();", :type=>"button") %> <%= submit_tag("Search") %></p>
<hr/>
<h2>Choose Data Set to Search</h2>
<p>
    <%= label(:select_dataset, "Dataset:") %>
    <%= select_tag(:select_program, options_for_select([['Mus musculus 8.10.2012', '72'],['Mus musculus 5.11.2012', '64'],['Rattus norvegicus 18','45']],'72')) %>
</p>
<hr/>
<h2>Alogirthm settings</h2>
<p>
    The query sequence is filtered for low complexity regions by default.<br/>
    Filter
    <%= bq.check_box :filter_for_low_complexity %><%= bq.label :filter_for_low_complexity, "Low complexity" %>
    <%= bq.check_box :soft_masking %> <%= bq.label :soft_masking, "Mask for lookup table only" %>
</p>
<p>
    <!--<label for="e_value">Expect (e-value)</label><%= select_tag(:e_evalue, options_for_select([[0.0001, 0.0001],[0.01, 0.01],[1,1],[10,10],[100,100],[1000,1000]],10)) %>-->
    <%= bq.label :e_value, "Expect threshold (e-value)" %><%= bq.text_field :e_value %>
    <%= bq.check_box :perform_ungapped_alignment %><%= bq.label :perform_ungapped_alignment, "Perform ungapped alignment?" %>
</p>
<div>
    <!--<label for="cost_to_open_gap">Cost to open a gap [Integer]</label>
    <%= text_field_tag(:cost_to_open_gap,5) %>-->
    <%= bq.label :gap_open_penalty, "Cost to open a gap [Integer]" %>
    <%= bq.text_field :gap_open_penalty %>
</div>
<div>
    <!--<label for="cost_to_extend_gap">Cost to extend a gap [Integer]</label>
    <%= text_field_tag(:cost_to_extend_gap,2) %>-->
    <%= bq.label :gap_extension_penalty, "Cost to extend a gap [Integer]" %>
    <%= bq.text_field :gap_extension_penalty %>
</div>
<div>
    <!--<label for="mismatch_penalty">Penalty for a mismatch in the blast portion of run [Integer]</label>
    <%= text_field_tag(:mismatch_penalty,-3) %>-->
    <%= bq.label :mismatch_penalty, "Penalty for a mismatch in the blast portion of run [Integer]" %>
    <%= bq.text_field :mismatch_penalty %>
</div>
<div>
    <!--<label for="match_reward">Reward for a match in the blast portion of run [Integer]</label>
    <%= text_field_tag(:match_reward,1) %>-->
    <%= bq.label :match_reward, "Reward for a match in the blast portion of run [Integer]" %>
    <%= bq.text_field :match_reward %>
</div>
<div>
    <!--<label for="word_size">Word size, default is 11 for blastn, 3 for other programs.</label>
    <%= text_field_tag(:word_size,"3 or 11") %>-->
    <%= bq.label :word_size, "Word size [Integer]" %>
    <%= bq.text_field :word_size %>
</div>
<div>
    <!--<label for="number_of_one_line_descriptions">Number of one-line descriptions (V) [Integer]</label>
    <%= text_field_tag(:number_of_one_line_descriptions,100) %>-->
    <%= bq.label :number_of_one_line_descriptions, "Descriptions" %>>
    <%= bq.select :number_of_one_line_descriptions, options_for_select([0,10,50,100,250,500],
        bq.object.number_of_one_line_descriptions) %>
</div>
<div>
    <!--<label for="number_of_alignments_to_show">Number of alignments to show (B) [Integer]</label>
    <%= text_field_tag(:number_of_alignments_to_show,100) %>-->
    <%= bq.label :number_of_alignments_to_show, "Number of alignments to show" %>
    <%= bq.select :number_of_alignments_to_show, options_for_select([0,10,50,100,250,500],
        bq.object.number_of_alignments_to_show) %>
</div>
<p>
    <h2>Output Format</h2>
    <!--<label for="ouput_format">Output Format</label>
    <%= select_tag(:ouput_format, options_for_select([['Pairwise', 0],['XML Blast Output', 5],['Tabular',6],['Tabular with Comment Lines',7],['Comma-separated values',10]],bq.object.output_format)) %>-->
    <%= bq.label :output_format, "Output Format" %>
    <%= bq.select :output_format, options_for_select([['Pairwise', 0],['XML Blast Output', 5],['Tabular',6],['Tabular with Comment Lines',7],['Comma-separated values',10]],bq.object.output_format) %>
</p>

<script type="text/javascript">
    function clear_sequence(){
        var fasta_text_area = document.getElementById("blast_query_fasta_sequence");
    //         var subsequence_from = document.getElementById("subsequence_from");
    //         var subsequence_to = document.getElementById("subsequence_to");
    //         subsequence_from.value='';
    //         subsequence_to.value='';
        fasta_text_area.value='';
        fasta_text_area.focus();
    }
</script>
