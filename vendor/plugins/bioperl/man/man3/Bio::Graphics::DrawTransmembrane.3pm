.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Bio::Graphics::DrawTransmembrane 3"
.TH Bio::Graphics::DrawTransmembrane 3 "2012-12-24" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Bio::Graphics::DrawTransmembrane \- draw a cartoon of an Alpha\-helical transmembrane protein.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  use Bio::Graphics::DrawTransmembrane;
\&  my @topology = (20,45,59,70,86,109,145,168,194,220);
\&
\&  ## Simple use \- \-topology is the only option that is required
\&
\&  my $im = Bio::Graphics::DrawTransmembrane\->new(
\&      \-title => \*(AqThis is a cartoon displaying transmembrane helices.\*(Aq,
\&      \-topology => \e@topology);
\&
\&  ## More advanced use
\&  my %labels = (5 => \*(Aq5 \- Sulphation Site\*(Aq,
\&                21 => \*(Aq1st Helix\*(Aq,
\&                47 => \*(Aq40 \- Mutation\*(Aq,
\&                60 => \*(AqVoltage Sensor\*(Aq,
\&                72 => \*(Aq72 \- Mutation 2\*(Aq,
\&                73 => \*(Aq73 \- Mutation 3\*(Aq,
\&                138 => \*(Aq138 \- Glycosylation Site\*(Aq,
\&                170 => \*(Aq170 \- Phosphorylation Site\*(Aq,
\&                200 => \*(AqLast Helix\*(Aq);
\&
\&  my $im = Bio::Graphics::DrawTransmembrane\->new(\-n_terminal=> \*(Aqout\*(Aq,
\&                                  \-topology => \e@topology,
\&                                  \-bold_helices=> 1,
\&                                  \-labels=> \e%labels,
\&                                  \-text_offset=> \-15,
\&                                  \-outside_label=>\*(AqLumen\*(Aq,
\&                                  \-inside_label=>\*(AqCytoplasm\*(Aq,
\&                                  \-membrane_label=>\*(AqMembrane\*(Aq,
\&                                  \-vertical_padding=> 155);
\&
\&  ## Parse Tmhmm data
\&  use Bio::Tools::Tmhmm;
\&  my $im = Bio::Graphics::DrawTransmembrane\->new(
\&      \-title=>\*(AqLet\e\*(Aqs parse some Tmhmm output...\*(Aq,
\&      \-bold_helices=> 1);
\&  open(FILE, \*(Aqtmhmm.out\*(Aq);
\&  my $parser = new Bio::Tools::Tmhmm(\-fh => \e*FILE );
\&  while(my $tmhmm_feat = $parser\->next_result ) {
\&        ## Load features into DrawTransmembrane object
\&        $im\->add_tmhmm_feat($tmhmm_feat);
\&  }
\&  close FILE;
\&
\&  ## Now write the image to a .png file
\&  open(OUTPUT, ">output.png");
\&  binmode OUTPUT;
\&  print OUTPUT $im\->png;
\&  close OUTPUT;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
A module to draw a cartoon of an alpha-helical transmembrane
protein. It uses \s-1GD\s0 and allows the image to be written to a .png file.
.PP
The options are a set of tag/value pairs as follows:
.PP
.Vb 2
\&  Option              Value                                         Default
\&  \-\-\-\-\-\-              \-\-\-\-\-                                         \-\-\-\-\-\-\-
\&
\&  \-topology           Array containing transmembrane helix          none
\&                      boundaries. This is the only option that 
\&                      is required
\&
\&  \-topology_string    Alternative to \-topology, provide a string    none
\&                      containing the topology data in the form
\&                      A.11,31;B.41,59;C.86,107;D.145,166
\&
\&  \-n_terminal         Location of the N\-terminal of the sequence,   out
\&                      either \*(Aqin\*(Aq or \*(Aqout\*(Aq
\&
\&  \-title              Title to add to the image                     none
\&
\&  \-inside_label       Label for the inside of the membrane          Cytoplasmic
\&
\&  \-outside_label      Label for the outside of the membrane         Extracellular
\&
\&  \-membrane_label     Label for the membrane                        Plasma Membrane
\&
\&  \-colour_scheme      Colour scheme to use. Current choices are     blue
\&                      blue, yellow, red, green, pink or white. 
\&
\&  \-labels             Label loops and helices using data from a     none
\&                      hash, e.g.
\&
\&                      %labels = (138 => \*(AqGlycosylation Site\*(Aq,
\&                                 190 => \*(AqBinding Site\*(Aq);
\&
\&                      The hash key must be numeric, ranges are 
\&                      not allowed.
\&
\&  \-bold_helices       Draws black boxes round helices               1
\&
\&  \-bold_labels        Draws black boxes round labels                0
\&
\&  \-text_offset        Shift the text labeling the loops. Use a      0 
\&                      negative value to shift it left, a positive
\&                      value to shift it right
\&
\&  \-helix_height       Transmembrane helix height                    130
\&
\&  \-helix_width        Transmembrane helix width                     50
\&
\&  \-loop_width         Loop width                                    20
\&
\&  \-vertical_padding   Vertical padding                              140
\&
\&  \-horizontal_padding Horizontal Padding                            150
\&
\&  \-membrane_offset    Offest between helix end and membrane         6
\&
\&  \-short_loop_height  Height of short loops                         90
\&
\&  \-medium_loop_height Height of medium loops                        120
\&
\&  \-long_loop_height   Height of long loops                          150
\&
\&  \-short_loop_limit   Length in residues below which a loop is      15
\&                      classed as short
\&
\&  \-long_loop_limit    Length in residues above which a loop is      30
\&                      classed as long
\&
\&  \-loop_heights       Explicitly set heights of each loop, e.g.
\&
\&                      %loop_heights = (1 => 45,
\&                                       2 => 220,
\&                                       3 => 50,
\&                                       4 => 220,
\&                                       9 => 70);
\&
\&                      The key corresponds to the loop number. Both
\&                      key and value must be numeric. If you use
\&                      \-loop_height and there is a defined height
\&                      for the current loop then other height values
\&                      will be overridden
\&
\&  \-n_terminal_height  Height of N\-terminal                          150
\&
\&  \-c_terminal_height  Height of C\-terminal                          80
\&
\&  \-n_terminal_offset  Shift the N\-terminal left by this amount      0
\&
\&  \-c_terminal_offset  Shift the C\-terminal right by this amount     0
\&
\&  \-helix_label        Change the \*(AqS\*(Aq label on each helix. Only 1    S
\&                      character is allowed
\&
\&  \-show_labels        Display text labels                           on
\&
\&  \-draw_cytosol       Show the cytosol                              false
\&
\&  \-draw_bilayer       Show the membrane                             true
\&
\&  \-draw_loops         Show the loops                                true
\&
\&  \-draw_terminai      Show the terminai                             true
\&
\&  \-draw_helices       Show the helices                              true
\&
\&  \-dontsort           Don\*(Aqt automatically sort the topology array   0
\&
\&  \-ttf_font           Path to TTF font, e.g.                        none 
\&                      /usr/share/fonts/msttcorefonts/arial.ttf
\&
\&  \-ttf_font_size      Default size for TTF font. Use 7\-9 with       8
\&                      Arial for best results
.Ve
.PP
Height, width, padding and other numerical values can gernerally be
left alone. They are useful if your labels consists of a lot of text
as this may lead to them overlapping. In this case try increasing the
loop_width or helix_width options. \-text_offset is also very useful
for avoiding overlapping.
.SH "AUTHOR"
.IX Header "AUTHOR"
Tim Nugent <timnugent@gmail.com>
