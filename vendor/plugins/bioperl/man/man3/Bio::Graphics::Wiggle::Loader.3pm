.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Bio::Graphics::Wiggle::Loader 3"
.TH Bio::Graphics::Wiggle::Loader 3 "2012-12-24" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&  my $loader = Bio::Graphics::Wiggle::Loader\->new(\*(Aq/base/directory/for/wigfiles\*(Aq,\*(Aqwibfilename\*(Aq);
\&  my $fh = IO::File\->new(\*(Aquploaded_file.txt\*(Aq);
\&  $loader\->load($fh);
\&
\&  my $gff3_file   = $loader\->featurefile(\*(Aqgff3\*(Aq,$method,$source);
\&  my $featurefile = $loader\->featurefile(\*(Aqfeaturefile\*(Aq);
\&  my @features    = $loader\->features();
.Ve
.SH "USAGE"
.IX Header "USAGE"
This module loads Bio::Graphics::Wiggle files from source files that
use Jim Kent's \*(L"\s-1WIG\s0\*(R" format:
.PP
http://genome.ucsc.edu/google/goldenPath/help/wiggle.html
.PP
Several data sets can be grouped together in a single \s-1WIG\s0 source
file. The \fIload()\fR method accepts the path to a \s-1WIG\s0 source file, and
will create one or more .wib (\*(L"wiggle binary\*(R") databases of
quantitative data in the directory indicated when you created the
loader. Call the \fIfeaturefile()\fR method to return a text file in either
\&\s-1GFF3\s0 or Bio::Graphics::FeatureFile format, suitable for loading into a
gbrowse database.
.SS "\s-1METHODS\s0"
.IX Subsection "METHODS"
.ie n .IP "$loader = Bio::Graphics::Wiggle::Loader\->new('/base/directory' [,'my_data'])" 4
.el .IP "\f(CW$loader\fR = Bio::Graphics::Wiggle::Loader\->new('/base/directory' [,'my_data'])" 4
.IX Item "$loader = Bio::Graphics::Wiggle::Loader->new('/base/directory' [,'my_data'])"
Create a new loader. The first argument specifies the base directory
in which the loaded .wib files will be created. The second argument
specifies the base name for the created .wib files, or \*(L"track\*(R" if not
specified.
.ie n .IP "$loader\->load($fh)" 4
.el .IP "\f(CW$loader\fR\->load($fh)" 4
.IX Item "$loader->load($fh)"
Load the data from a source \s-1WIG\s0 file opened on a filehandle.
.ie n .IP "$data = $loader\->featurefile($type [,$method,$source])" 4
.el .IP "\f(CW$data\fR = \f(CW$loader\fR\->featurefile($type [,$method,$source])" 4
.IX Item "$data = $loader->featurefile($type [,$method,$source])"
Return the data corresponding to a \s-1GFF3\s0 or
Bio::Graphics::FeatureFile. The returned file will have one feature
per \s-1WIG\s0 track, and a properly formatted \*(L"wigfile\*(R" attribute that
directs Bio::Graphics to the location of the quantitative data.
.Sp
\&\f(CW$type\fR is one of \*(L"gff3\*(R" or \*(L"featurefile\*(R". In the case of \*(L"gff3\*(R", you
may specify an optional method and source for use in describing each
feature. In the case of \*(L"featurefile\*(R", the returned file will contain
GBrowse stanzas that describe a reasonable starting format to display
the data.
.ie n .IP "@features = $loader\->features" 4
.el .IP "\f(CW@features\fR = \f(CW$loader\fR\->features" 4
.IX Item "@features = $loader->features"
Returns one or more Bio::Graphics::Features objects, which can be used to
create Bio::Graphics tracks with the wiggle_xyplot (and related) glyphs.
.ie n .IP "$loader\->\fIallow_sampling\fR\|(1)" 4
.el .IP "\f(CW$loader\fR\->\fIallow_sampling\fR\|(1)" 4
.IX Item "$loader->allow_sampling"
If \fIallow_sampling()\fR is passed a true value, then very large files
(more than 5 \s-1MB\s0) will undergo a sampling procedure to find their
minimum and maximum values and standard deviation. Otherwise, file
will be read in its entirety to generate those statistics.
.SS "\s-1EXTENSIONS\s0"
.IX Subsection "EXTENSIONS"
Several extensions to the \s-1WIG\s0 format \*(L"track\*(R" declaration are recognized.
.IP "transform=<transform>" 4
.IX Item "transform=<transform>"
Specify a transform to be performed on all numeric data within this
track prior to loading into the binary wig file. Currently, the
following three declarations are recognized:
.Sp
.Vb 3
\& transform=logtransform y\*(Aq = 0          for  y == 0
\&                        y\*(Aq = log(y)     for  y >  0
\&                        y\*(Aq = \-log(\-y)   for  y <  0
\&                        
\&
\& transform=logsquared  y\*(Aq = log(y**2) for y != 0
\&                       y\*(Aq = 0         for y == 0
\&            
\& transform=none        y\*(Aq = y   (no transform \- the default)
.Ve
.IP "trim=<trim>" 4
.IX Item "trim=<trim>"
Specify a trimming function to be performed on the data prior to
scaling. Currently, the following trim functions are recognized:
.Sp
.Vb 4
\& trim=stdev1           trim to plus/minus 1 standard deviation of the mean
\& trim=stdev2           trim to plus/minus 2 standard deviations of the mean (default)
\& trim=stdevN           trim to plus/minus N standard deviations of the mean
\& trim=none             no trimming
.Ve
.PP
Example entended track declaration:
.PP
.Vb 2
\& track type=wiggle_0 name="example" description="20 degrees, 2 hr"  \e
\&       trim=stdev2 transform=logsquared
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Bio::Graphics::Wiggle,
Bio::Graphics::Glyph::wiggle_xyplot,
Bio::Graphics::Glyph::wiggle_density,
Bio::Graphics::Panel,
Bio::Graphics::Glyph,
Bio::Graphics::Feature,
Bio::Graphics::FeatureFile
.SH "AUTHOR"
.IX Header "AUTHOR"
Lincoln Stein <lstein@cshl.org>.
.PP
Copyright (c) 2007 Cold Spring Harbor Laboratory
.PP
This package and its accompanying libraries is free software; you can
redistribute it and/or modify it under the terms of the \s-1GPL\s0 (either
version 1, or at your option, any later version) or the Artistic
License 2.0.  Refer to \s-1LICENSE\s0 for the full license text. In addition,
please see \s-1DISCLAIMER\s0.txt for disclaimers of warranty.
