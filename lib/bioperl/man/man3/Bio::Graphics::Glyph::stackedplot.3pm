.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Bio::Graphics::Glyph::stackedplot 3"
.TH Bio::Graphics::Glyph::stackedplot 3 "2012-12-24" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Bio::Graphics::Glyph::stackedplot \- The stackedplot glyph
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  See L<Bio::Graphics::Panel> and L<Bio::Graphics::Glyph>.
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The stackedplot glyph can be used to draw quantitative feature data
using a stacked column plot. It differs from the xyplot glyph in that
the plot applies to a single top level feature, not a group of
subfeatures. The data to be graphed is derived from an attribute
called \*(L"data_series.\*(R"
.PP
The data to be graphed is represented as a list of arrays:
.PP
.Vb 6
\& (
\& [1, 2, 8],
\& [6, 1, 1],
\& [10,8, 0],
\& [1, 1, 1],
\& )
.Ve
.PP
Each array is a column in the stacked plot. Its values become the
subdivisions of the column. In this example, there are four columns,
each of which has three subdivisions.
.PP
You can add labels to the columns and change the colors of the
subdivisions.
.PP
To assign data to a feature, you can add a \*(L"series\*(R" tag:
.PP
.Vb 12
\& $snp1    = Bio::SeqFeature::Generic \->new (\-start     => 500,\-end=>501,
\&                                            \-display_name =>\*(Aqexample\*(Aq,
\&                                            \-tag=> { series => [
\&                                                             [10,20,30],
\&                                                             [30,30,0],
\&                                                             [5,45,10],
\&                                                             [5,45,10],
\&                                                             [5,45,10],
\&                                                             [50,0,50],
\&                                                            ],
\&                                                     }
\&                                               );
.Ve
.PP
Note that the series tag must consist of an array of arrays.
.PP
If you are using a gff3 representation, you can load a database with
data that looks like this:
.PP
.Vb 1
\& chr1 test feature 1 1000 . . . series=10 20 30;series=30 30 0;series=5 45 10...
.Ve
.PP
If you are using a gff2 representation, you can load a database with
data that looks like this:
.PP
.Vb 1
\& chr1 test feature 1 1000 . . . series 10 20 30; series 30 30 0 series 5 45 10...
.Ve
.PP
Or you can pass a callback to the \-series option:
.PP
.Vb 11
\& $panel\->add_track(\e@data,
\&                  \-glyph     => \*(Aqstackedplot\*(Aq,
\&                  \-series       => sub {
\&                                  my $feature = shift;
\&                             return [
\&                                [10,20,30],
\&                                [30,30,0],
\&                                [5,45,10],
\&                            ]
\&                          }
\&                 );
.Ve
.SS "\s-1OPTIONS\s0"
.IX Subsection "OPTIONS"
The following options are standard among all Glyphs.  See
Bio::Graphics::Glyph for a full explanation.
.PP
.Vb 2
\&  Option      Description                      Default
\&  \-\-\-\-\-\-      \-\-\-\-\-\-\-\-\-\-\-                      \-\-\-\-\-\-\-
\&
\&  \-fgcolor      Foreground color               black
\&
\&  \-outlinecolor Synonym for \-fgcolor
\&
\&  \-bgcolor      Background color               turquoise
\&
\&  \-fillcolor    Synonym for \-bgcolor
\&
\&  \-linewidth    Line width                     1
\&
\&  \-height       Height of glyph                10
\&
\&  \-font         Glyph font                     gdSmallFont
\&
\&  \-label        Whether to draw a label        0 (false)
\&
\&  \-description  Whether to draw a description  0 (false)
\&
\&  \-hilite       Highlight color                undef (no color)
.Ve
.PP
In addition, the alignment glyph recognizes all the options of the
xyplot glyph, as well as the following glyph-specific option:
.PP
.Vb 2
\&  Option         Description                  Default
\&  \-\-\-\-\-\-         \-\-\-\-\-\-\-\-\-\-\-                  \-\-\-\-\-\-\-
\&
\& \-fixed_gap     Vertical distance between      8
\&                the rectangle that shows
\&                the start:end range of
\&                the feature and the fixed
\&                width stacked plot.
\&
\& \-series_colors A list giving a series of     red,blue,green,orange,
\&                color names for the data      brown,grey,black
\&                series (the values inside
\&                each stacked column).
\&
\& \-column_labels A list of labels to print     \-none\-
\&                underneath each column.
\&
\& \-column_width  The width of each column.     8
\&
\& \-column_spacing Spacing between each         2
\&                column.
\&
\& \-min_score     Minimum score for the         0.0
\&                sum of the members of
\&                each data series.
\&
\& \-max_score     Maximum score for the         1.0
\&                sum of the members of each
\&                data series.
\&
\& \-scale_font    Font to use for the scale.    gdTinyFont
\&
\& \-column_font   Font to use for the column    gdSmallFont
\&                labels.
\&
\& \-draw_scale    Whether to draw a scale to    true
\&                right of the columns.
.Ve
.PP
Note that \-min_score and \-max_score represent the minimum and maximum
\&\s-1SUM\s0 of all the values in the data series. For example, if your largest
column contains the series (10,20,30), then the \-max_score is 60.
.SH "EXAMPLE"
.IX Header "EXAMPLE"
To understand how this glyph works, try running and modifying the following example:
.PP
.Vb 1
\& #!/usr/bin/perl
\&
\& use strict;
\& use warnings;
\&
\& use Bio::Graphics;
\& use Bio::SeqFeature::Generic;
\&
\& my $segment  = Bio::Graphics::Feature\->new(\-start=>1,\-end=>700);
\&
\& my $snp1     = Bio::SeqFeature::Generic \->new (\-start     => 500,\-end=>590,
\&                                                \-display_name =>\*(Aqfred\*(Aq,
\&                                                \-tag=> { series => [
\&                                                                     [10,20,30],
\&                                                                     [30,30,0],
\&                                                                     [5,45,10],
\&                                                                     [5,45,10],
\&                                                                     [5,45,10],
\&                                                                     [50,0,50],
\&                                                                    ],
\&                                                      },
\&                                                \-source=>\*(AqA test\*(Aq,
\&                                                );
\&
\& my $snp2     = Bio::SeqFeature::Generic\->new(\-start     => 300,
\&                                              \-end       => 301,
\&                                              \-display_name  => \*(Aqrs12345\*(Aq,
\&                                              \-tag=> {
\&                                                     series => [
\&                                                                     [30,20,10 ],
\&                                                                     [80,10,10 ],
\&                                                               ],
\&                                                    },
\&                                              \-source=>\*(AqAnother test\*(Aq,
\&                                            );
\&
\& my $panel = Bio::Graphics::Panel\->new(\-segment=>$segment,\-width=>800);
\&
\& $panel\->add_track($segment,\-glyph=>\*(Aqarrow\*(Aq,\-double=>1,\-tick=>2);
\& $panel\->add_track([$snp1,$snp2],
\&                   \-height    => 50,
\&                   \-glyph     => \*(Aqstackedplot\*(Aq,
\&                   \-fixed_gap => 12,
\&                   \-series_colors    => [qw(red blue lavender)],
\&                   \-column_labels => [qw(a b c d e f g)],
\&                   \-min_score => 0,
\&                   \-max_score => 100,
\&                   \-column_width => 8,
\&                   \-column_font  => \*(AqgdMediumBoldFont\*(Aq,
\&                   \-scale_font   => \*(AqgdTinyFont\*(Aq,
\&                   \-label    => 1,
\&                   \-description=>1,
\&                  );
\& print $panel\->png;
.Ve
.SH "BUGS"
.IX Header "BUGS"
Please report them.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Bio::Graphics::Panel,
Bio::Graphics::Track,
Bio::Graphics::Glyph::transcript2,
Bio::Graphics::Glyph::anchored_arrow,
Bio::Graphics::Glyph::arrow,
Bio::Graphics::Glyph::box,
Bio::Graphics::Glyph::primers,
Bio::Graphics::Glyph::segments,
Bio::Graphics::Glyph::toomany,
Bio::Graphics::Glyph::transcript,
.SH "AUTHOR"
.IX Header "AUTHOR"
Lincoln Stein <lstein@cshl.org>
.PP
Copyright (c) 2006 Cold Spring Harbor Laboratory
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.  See \s-1DISCLAIMER\s0.txt for
disclaimers of warranty.
