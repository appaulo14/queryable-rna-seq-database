.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Bio::Graphics::Glyph::trace 3"
.TH Bio::Graphics::Glyph::trace 3 "2012-12-24" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Bio::Graphics::Glyph::trace \- A glyph that visualizes a trace file
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\& use Bio::Graphics;
\& use Bio::Seq;
\& use Bio::SeqFeature::Generic;
\&
\& my $bsg = \*(AqBio::SeqFeature::Generic\*(Aq;
\&
\& my $seq    = Bio::Seq\->new(\-length=>1000);
\&
\& my $whole  = $bsg\->new(\-display_name => \*(AqClone82\*(Aq,
\&                        \-start        => 1,
\&                        \-end          => $seq\->length);
\&
\& my $trace1 = $bsg\->new(\-start        => 100,
\&                        \-end          => 300,
\&                        \-display_name => \*(AqExcretory System\*(Aq,
\&                        \-tag=>{
\&                              trace=>"/path/to/trace/file.scf"
\&                              }
\&                       );
\&
\& my $trace2 = $bsg\->new(\-start        => 500,
\&                        \-end          => 800,
\&                        \-display_name => \*(AqExpression Pattern\*(Aq,
\&                        \-tag=>{
\&                              trace=>"http://localhost/traces/file2.scf"
\&                              }
\&                       );
\&
\& my $panel = Bio::Graphics::Panel\->new(\-length    => $seq\->length,
\&                                       \-width     => 800,
\&                                       \-truecolor => 1,
\&                                       \-key_style => \*(Aqbetween\*(Aq,
\&                                       \-pad_left  => 10,
\&                                       \-pad_right => 10,
\&                                      );
\&
\& $panel\->add_track($whole,
\&                   \-glyph    => \*(Aqarrow\*(Aq,
\&                   \-double   => 1,
\&                   \-tick     => 2,
\&                   \-label    => 1,
\&                   );
\&
\& $panel\->add_track([$trace1,$trace2],
\&                   \-glyph    => \*(Aqtrace\*(Aq,
\&                   \-label    => 1,
\&                   \-key       => \*(AqExample traces\*(Aq);
\&
\& binmode STDOUT;
\& print $panel\->png;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This glyph parses and displays trace information from a file.  A generic glyph
is used to show where the trace is located and when the display is zoomed in
enough to see the sequence, the trace will be drawn.
.PP
The trace file can only be in \s-1SCF\s0 format.  The file can be located on the local
filesystem or located at a remote \s-1URL\s0 (provided that you have the \s-1LWP\s0 module
installed).
.PP
Until an alignment feature is added to this glyph, the feature start and end
must correspond exactly with the begining and end of the called sequence.
Meaning that even if the starting sequence is poor and doesn't match the
sequence, it must still be included.
.PP
The figure below illustrates this.  The trace and the reference sequence align
from points \*(L"b\*(R" to \*(L"c\*(R".  The positions \*(L"A\*(R" and \*(L"D\*(R" need to be calculated and
used in order for the trace to line up correctly.
.PP
.Vb 4
\&             A      b         c     D  
\&  ref \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&                    |||||||||||
\&  trace      \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.Ve
.PP
The glyph may be modified in the future to avoid this hassle (and it should
still be compatible with the method described above).
.SS "\s-1OPTIONS\s0"
.IX Subsection "OPTIONS"
The following options are standard among all Glyphs.  See
Bio::Graphics::Glyph for a full explanation.
.PP
.Vb 2
\&  Option      Description                      Default
\&  \-\-\-\-\-\-      \-\-\-\-\-\-\-\-\-\-\-                      \-\-\-\-\-\-\-
\&
\&  \-fgcolor      Foreground color               black
\&
\&  \-outlinecolor Synonym for \-fgcolor
\&
\&  \-bgcolor      Background color               turquoise
\&
\&  \-fillcolor    Synonym for \-bgcolor
\&
\&  \-linewidth    Line width                     1
\&
\&  \-height       Height of glyph                10
\&
\&  \-font         Glyph font                     gdSmallFont
\&
\&  \-connector    Connector type                 0 (false)
\&
\&  \-connector_color
\&                Connector color                black
\&
\&  \-label        Whether to draw a label        0 (false)
\&
\&  \-description  Whether to draw a description  0 (false)
\&
\&  \-hilite       Highlight color                undef (no color)
.Ve
.PP
The following additional options are available to the \*(L"image\*(R" glyph:
.PP
.Vb 2
\&  Option            Description                       Default
\&  \-\-\-\-\-\-            \-\-\-\-\-\-\-\-\-\-\-                       \-\-\-\-\-\-\-
\&
\&  \-trace            Specify the trace path or URL     none
\&                    to use for this feature
\&
\&  \-trace_prefix     String to prepend to              none
\&                    each trace path. You may prepend
\&                    a directory or a partial URL.
\&
\&  \-trace_height     The height in pixels that the     90
\&                    trace will be drawn
\&
\&  \-vertical_spacing Vertical distance from the box    20
\&                    that shows the physical span of
\&                    the feature to the top of the
\&                    picture (in pixels)
\&
\&  \-glyph_delegate   Glyph to use when zoomed out too  \*(Aqgeneric\*(Aq
\&                    far for the trace to be drawn
\&
\&  \-a_color          Color of the line representing    \*(Aqgreen\*(Aq
\&                    Adenine on the trace
\&
\&  \-c_color          Color of the line representing    \*(Aqblue\*(Aq
\&                    Cytosine on the trace
\&
\&  \-g_color          Color of the line representing    \*(Aqblack\*(Aq
\&                    Guanine on the trace
\&
\&  \-t_color          Color of the line representing    \*(Aqred\*(Aq
\&                    Thymine on the trace
\&
\&  \-show_border      Show the black border from        0
\&                    around the trace
\&
\&  \-abi_scale        The scale factor for abi          1
\&                    formatted files.  This is 
\&                    multiplied against the max 
\&                    trace value to determine the
\&                    hight of peaks.
.Ve
.SS "Specifying the Trace"
.IX Subsection "Specifying the Trace"
The path to the trace file can be specified in two ways. First, you can place
it in the feature itself using a tag named \*(L"trace\*(R". Second, you can specify it
as a track option using a callback:
.PP
.Vb 6
\&  $panel\->add_track(\e@features,
\&                    \-glyph=>\*(Aqtrace\*(Aq,
\&                    \-trace => sub { my $feature = shift;
\&                                    my $trace_path = do_something();
\&                                    return $trace }
\&                    );
.Ve
.PP
You can of course give \-trace a constant string, in which case each feature
will show the same trace.
.PP
The trace can be a file on the local operating system or a \s-1URL\s0. However, \s-1URL\s0
fetching will only work if the \s-1LWP\s0 module is installed on your system.
Otherwise the glyph will fail with an error message.
.PP
If the trace is a relative path (it does not begin with a slash or a \s-1URL\s0
protocol), then the contents of \-trace_prefix will be prepended to it. This
allows you to specify traces that are relative to a particular directory or a
partial \s-1URL\s0. Example:
.PP
.Vb 4
\&  $panel\->add_track(\e@features,
\&                    \-glyph => \*(Aqtrace\*(Aq,
\&                    \-trace_prefix => \*(Aqhttp://localhost/anatomy/trace\-browser_files\*(Aq,
\&                   );
.Ve
.PP
This specifies that each feature's \*(L"trace\*(R" tag is to be appended to the partial
localhost \s-1URL\s0, thereby saving space.
.SS "Glyph Delegation"
.IX Subsection "Glyph Delegation"
The trace glyph consists of two parts: an upper part that shows the extent of
the feature in base pair coordinates, and a lower part that shows the trace.
The upper part will always be displayed.  The lower part will only display if
zoomed close enough to see the sequence.
.PP
By default the upper part uses the \*(L"generic\*(R" glyph, which is a simple rectangle
filled with the bgcolor and outlined with the fgcolor. To use a different glyph
in the upper part, specify the \-glyph_delegate option, giving the name of the
glyph you wish to use. For instance, to use the \*(L"span\*(R" glyph:
.PP
.Vb 4
\&  $panel\->add_track(\e@features,
\&                    \-glyph          => \*(Aqtrace\*(Aq,
\&                    \-glyph_delegate => \*(Aqspan\*(Aq
\&                   );
.Ve
.PP
This feature does not work with all glyphs, and in particular requires a recent
\&\s-1CVS\s0 checkout of Bio::Perl to work properly with the \*(L"arrow\*(R", \*(L"span\*(R" and
\&\*(L"primers\*(R" glyphs (support for the feature did not make it into version 1.5).
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
See the \s-1DESCRIPTION\s0 for an explaination of how to align the trace with the
reference.
.PP
The trace looks a little off when the feature is on the negative strand of the
reference.  This is because the letters are on the oppisite side of the
position line.  This issue should be addressed.
.PP
This glyph uses it's own version of the Bio::Graphics::Panel method, \fImap_pt()\fR,
due to that method not behaving as needed.  The new copied method is called
\&\*(L"trace_map_pt\*(R".
.PP
If the trace file is gzipped, it will unzip it without destroying the gzipped
file.  However, it will also not remove the newly created file.  This will only
be an issue when the files are stored locally, since web accessed trace files
are stored as temp files anyway.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Bio::Graphics::Panel,
Bio::Graphics::Glyph,
Bio::Graphics::Glyph::arrow,
Bio::Graphics::Glyph::cds,
Bio::Graphics::Glyph::crossbox,
Bio::Graphics::Glyph::diamond,
Bio::Graphics::Glyph::dna,
Bio::Graphics::Glyph::dot,
Bio::Graphics::Glyph::ellipse,
Bio::Graphics::Glyph::extending_arrow,
Bio::Graphics::Glyph::generic,
Bio::Graphics::Glyph::graded_segments,
Bio::Graphics::Glyph::heterogeneous_segments,
Bio::Graphics::Glyph::image,
Bio::Graphics::Glyph::line,
Bio::Graphics::Glyph::pinsertion,
Bio::Graphics::Glyph::primers,
Bio::Graphics::Glyph::rndrect,
Bio::Graphics::Glyph::segments,
Bio::Graphics::Glyph::ruler_arrow,
Bio::Graphics::Glyph::toomany,
Bio::Graphics::Glyph::transcript,
Bio::Graphics::Glyph::transcript2,
Bio::Graphics::Glyph::translation,
Bio::Graphics::Glyph::triangle,
Bio::DB::GFF,
Bio::SeqI,
Bio::SeqFeatureI,
Bio::Das,
\&\s-1GD\s0
.SH "AUTHOR"
.IX Header "AUTHOR"
Ben Faga <faga@cshl.edu>, Lincoln Stein <lstein@cshl.org>, Todd Harris <harris@cshl.org>
.PP
Copyright (c) 2006 Cold Spring Harbor Laboratory
.PP
This package and its accompanying libraries is free software; you can
redistribute it and/or modify it under the terms of the \s-1GPL\s0 (either
version 1, or at your option, any later version) or the Artistic
License 2.0.  Refer to \s-1LICENSE\s0 for the full license text. In addition,
please see \s-1DISCLAIMER\s0.txt for disclaimers of warranty.
