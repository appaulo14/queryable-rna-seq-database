var search_data = {"index":{"searchIndex":["abstractqueryusingblast","admincontroller","adminhelper","applicationcontroller","applicationhelper","arrayelementsarenotemptyvalidator","arrayofuploadedfilesvalidator","arrayvalidator","blastutil","confirmuser","confirmationscontroller","dataset","datasetbelongstouservalidator","datasetnameuniqueforuservalidator","deleteunconfirmeduser","differentialexpressiontest","findgotermsfordataset","fpkmsample","gene","genenamequeryconditiongenerator","getgenefastas","gettranscriptfasta","gofilterchecker","goidsqueryconditiongenerator","goterm","gotermfinderandprocessor","gotermsqueryconditiongenerator","hasfastafileextensionvalidator","homecontroller","homehelper","homemailer","nameisgeneexpdiffvalidator","nameisisoformexpdiffvalidator","nameisisoformfpkmtrackingvalidator","nameistrinityfastavalidator","nucleotidefastasequencesvalidator","proteinfastasequencesvalidator","queryanalysiscontroller","queryanalysishelper","queryanalysismailer","querydiffexpgenes","querydiffexptranscripts","querytranscriptisoforms","queryusingblastn","queryusingtblastn","queryusingtblastx","registrationmailer","registrationscontroller","reportissue","sample","samplebelongstouservalidator","samplecomparison","samplecomparisonbelongstouservalidator","samplefpkm","systemutil","transcript","transcriptfpkmtrackinginformation","transcripthasgoterm","transcriptnamequeryconditiongenerator","trinitydiffexpfileprocessor","trinitydiffexpline","trinityfpkmfileprocessor","trinityfpkmline","trinitygenediffexpfileprocessor","trinitygenefpkmfileprocessor","trinitytranscriptdiffexpfileprocessor","trinitytranscriptfpkmfileprocessor","unconfirmeduservalidator","uploadcuffdiff","uploadfastasequences","uploadtrinitywithedger","uploadedfilevalidator","uploadedtrinitydiffexpfile","uploadedtrinityfpkmfile","user","viewmodelbooleanvalidator","workerforfindgotermsfordataset","workerforuploadcuffdiff","workerforuploadfastasequences","workerforuploadtrinitywithedger","add_sample_cmp_for_trinity_with_edger_genes()","add_sample_cmp_for_trinity_with_edger_transcripts()","ascending_sort_arrow()","backticks!()","blast()","cleanup_files()","confirm_user()","create()","create_sample_comparison()","delete()","delete_unconfirmed_user()","descending_sort_arrow()","destroy()","eof?()","eof?()","find_and_save()","find_go_terms()","find_go_terms_for_dataset()","generate_blast_report_from_xml_results()","generate_execution_string()","generate_query_condition()","generate_query_condition()","generate_query_condition()","generate_query_condition()","get_blastn_gap_costs_for_match_and_mismatch_scores()","get_color_for_score()","get_end_width_percent()","get_gene_diff_exp_samples_for_dataset()","get_gene_fastas()","get_if_dataset_has_go_terms()","get_next_line()","get_next_line()","get_query_diff_exp_genes_header_row()","get_query_diff_exp_transcripts_header_row()","get_query_transcript_isoforms_header_row()","get_start_width_percent()","get_tblastn_gap_costs_for_matrix()","get_tooltip()","get_transcript_diff_exp_samples_for_dataset()","get_transcript_fasta()","get_transcript_isoforms_samples_for_dataset()","get_unique_hit_id()","go_terms()","help_tip()","link_to_amigo_web_page_for_term()","link_to_fasta_sequence_for_transcript()","link_to_fasta_sequences_for_gene()","link_to_ncbi_search_for()","logo()","makeblastdb_with_seqids()","makeblastdb_without_seqids()","more_info_link()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","notify_admin_of_registration_request_email()","notify_user_of_blast2go_failure()","notify_user_of_blast2go_success()","notify_user_of_rejection()","notify_user_of_upload_failure()","notify_user_of_upload_success()","notify_user_that_confirmation_email_will_be_sent()","passes_go_filters()","perform()","perform()","perform()","perform()","persisted?()","persisted?()","persisted?()","persisted?()","persisted?()","persisted?()","persisted?()","persisted?()","persisted?()","persisted?()","persisted?()","persisted?()","persisted?()","prepare_io_files()","process_file()","process_file()","process_file()","process_file()","process_file()","process_file()","process_go_terms()","query()","query()","query()","query()","query()","query_diff_exp_genes()","query_diff_exp_transcripts()","query_transcript_isoforms()","query_using_blastn()","query_using_tblastn()","query_using_tblastx()","querying_indicator()","report_issue()","report_issue()","rollback_blast_database()","save()","save()","save()","send_confirmation_emails()","send_rejection_email_and_destroy_user()","send_report_on_issue()","set_attributes()","set_attributes()","set_attributes_and_defaults()","set_attributes_and_defaults()","set_attributes_and_defaults()","set_attributes_and_defaults()","set_attributes_and_defaults()","set_attributes_and_defaults()","set_attributes_and_defaults()","set_attributes_and_defaults()","set_attributes_and_defaults()","set_attributes_and_defaults()","set_attributes_and_defaults()","set_attributes_and_defaults()","set_fpkms_for_item()","system!()","update()","upload_cuffdiff()","upload_fasta_sequences()","upload_trinity_with_edger()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","view_confirmed_users()","view_unconfirmed_users()","welcome()","readme_for_app"],"longSearchIndex":["abstractqueryusingblast","admincontroller","adminhelper","applicationcontroller","applicationhelper","arrayelementsarenotemptyvalidator","arrayofuploadedfilesvalidator","arrayvalidator","blastutil","confirmuser","confirmationscontroller","dataset","datasetbelongstouservalidator","datasetnameuniqueforuservalidator","deleteunconfirmeduser","differentialexpressiontest","findgotermsfordataset","fpkmsample","gene","genenamequeryconditiongenerator","getgenefastas","gettranscriptfasta","gofilterchecker","goidsqueryconditiongenerator","goterm","gotermfinderandprocessor","gotermsqueryconditiongenerator","hasfastafileextensionvalidator","homecontroller","homehelper","homemailer","nameisgeneexpdiffvalidator","nameisisoformexpdiffvalidator","nameisisoformfpkmtrackingvalidator","nameistrinityfastavalidator","nucleotidefastasequencesvalidator","proteinfastasequencesvalidator","queryanalysiscontroller","queryanalysishelper","queryanalysismailer","querydiffexpgenes","querydiffexptranscripts","querytranscriptisoforms","queryusingblastn","queryusingtblastn","queryusingtblastx","registrationmailer","registrationscontroller","reportissue","sample","samplebelongstouservalidator","samplecomparison","samplecomparisonbelongstouservalidator","samplefpkm","systemutil","transcript","transcriptfpkmtrackinginformation","transcripthasgoterm","transcriptnamequeryconditiongenerator","trinitydiffexpfileprocessor","trinitydiffexpline","trinityfpkmfileprocessor","trinityfpkmline","trinitygenediffexpfileprocessor","trinitygenefpkmfileprocessor","trinitytranscriptdiffexpfileprocessor","trinitytranscriptfpkmfileprocessor","unconfirmeduservalidator","uploadcuffdiff","uploadfastasequences","uploadtrinitywithedger","uploadedfilevalidator","uploadedtrinitydiffexpfile","uploadedtrinityfpkmfile","user","viewmodelbooleanvalidator","workerforfindgotermsfordataset","workerforuploadcuffdiff","workerforuploadfastasequences","workerforuploadtrinitywithedger","queryanalysiscontroller#add_sample_cmp_for_trinity_with_edger_genes()","queryanalysiscontroller#add_sample_cmp_for_trinity_with_edger_transcripts()","queryanalysishelper#ascending_sort_arrow()","systemutil::backticks!()","abstractqueryusingblast#blast()","abstractqueryusingblast#cleanup_files()","admincontroller#confirm_user()","registrationscontroller#create()","trinitydiffexpfileprocessor#create_sample_comparison()","goterm#delete()","admincontroller#delete_unconfirmed_user()","queryanalysishelper#descending_sort_arrow()","goterm#destroy()","uploadedtrinitydiffexpfile#eof?()","uploadedtrinityfpkmfile#eof?()","findgotermsfordataset#find_and_save()","gotermfinderandprocessor#find_go_terms()","queryanalysiscontroller#find_go_terms_for_dataset()","abstractqueryusingblast#generate_blast_report_from_xml_results()","abstractqueryusingblast#generate_execution_string()","genenamequeryconditiongenerator#generate_query_condition()","goidsqueryconditiongenerator#generate_query_condition()","gotermsqueryconditiongenerator#generate_query_condition()","transcriptnamequeryconditiongenerator#generate_query_condition()","queryanalysiscontroller#get_blastn_gap_costs_for_match_and_mismatch_scores()","queryanalysishelper#get_color_for_score()","queryanalysishelper#get_end_width_percent()","queryanalysiscontroller#get_gene_diff_exp_samples_for_dataset()","queryanalysiscontroller#get_gene_fastas()","queryanalysiscontroller#get_if_dataset_has_go_terms()","uploadedtrinitydiffexpfile#get_next_line()","uploadedtrinityfpkmfile#get_next_line()","queryanalysiscontroller#get_query_diff_exp_genes_header_row()","queryanalysiscontroller#get_query_diff_exp_transcripts_header_row()","queryanalysiscontroller#get_query_transcript_isoforms_header_row()","queryanalysishelper#get_start_width_percent()","queryanalysiscontroller#get_tblastn_gap_costs_for_matrix()","queryanalysishelper#get_tooltip()","queryanalysiscontroller#get_transcript_diff_exp_samples_for_dataset()","queryanalysiscontroller#get_transcript_fasta()","queryanalysiscontroller#get_transcript_isoforms_samples_for_dataset()","queryanalysishelper#get_unique_hit_id()","transcript#go_terms()","applicationhelper#help_tip()","queryanalysishelper#link_to_amigo_web_page_for_term()","queryanalysishelper#link_to_fasta_sequence_for_transcript()","queryanalysishelper#link_to_fasta_sequences_for_gene()","queryanalysishelper#link_to_ncbi_search_for()","applicationhelper#logo()","blastutil::makeblastdb_with_seqids()","blastutil::makeblastdb_without_seqids()","applicationhelper#more_info_link()","abstractqueryusingblast::new()","confirmuser::new()","confirmationscontroller#new()","deleteunconfirmeduser::new()","findgotermsfordataset::new()","genenamequeryconditiongenerator::new()","getgenefastas::new()","gettranscriptfasta::new()","gofilterchecker::new()","goidsqueryconditiongenerator::new()","gotermfinderandprocessor::new()","gotermsqueryconditiongenerator::new()","querydiffexpgenes::new()","querydiffexptranscripts::new()","querytranscriptisoforms::new()","queryusingblastn::new()","queryusingtblastn::new()","queryusingtblastx::new()","reportissue::new()","transcriptnamequeryconditiongenerator::new()","trinitydiffexpfileprocessor::new()","trinityfpkmfileprocessor::new()","trinitygenediffexpfileprocessor::new()","trinitytranscriptdiffexpfileprocessor::new()","uploadcuffdiff::new()","uploadfastasequences::new()","uploadtrinitywithedger::new()","uploadedtrinitydiffexpfile::new()","uploadedtrinityfpkmfile::new()","registrationmailer#notify_admin_of_registration_request_email()","queryanalysismailer#notify_user_of_blast2go_failure()","queryanalysismailer#notify_user_of_blast2go_success()","registrationmailer#notify_user_of_rejection()","queryanalysismailer#notify_user_of_upload_failure()","queryanalysismailer#notify_user_of_upload_success()","registrationmailer#notify_user_that_confirmation_email_will_be_sent()","gofilterchecker#passes_go_filters()","workerforfindgotermsfordataset#perform()","workerforuploadcuffdiff#perform()","workerforuploadfastasequences#perform()","workerforuploadtrinitywithedger#perform()","abstractqueryusingblast#persisted?()","confirmuser#persisted?()","deleteunconfirmeduser#persisted?()","findgotermsfordataset#persisted?()","getgenefastas#persisted?()","gettranscriptfasta#persisted?()","querydiffexpgenes#persisted?()","querydiffexptranscripts#persisted?()","querytranscriptisoforms#persisted?()","reportissue#persisted?()","uploadcuffdiff#persisted?()","uploadfastasequences#persisted?()","uploadtrinitywithedger#persisted?()","abstractqueryusingblast#prepare_io_files()","trinitydiffexpfileprocessor#process_file()","trinityfpkmfileprocessor#process_file()","trinitygenediffexpfileprocessor#process_file()","trinitygenefpkmfileprocessor#process_file()","trinitytranscriptdiffexpfileprocessor#process_file()","trinitytranscriptfpkmfileprocessor#process_file()","gotermfinderandprocessor#process_go_terms()","getgenefastas#query()","gettranscriptfasta#query()","querydiffexpgenes#query()","querydiffexptranscripts#query()","querytranscriptisoforms#query()","queryanalysiscontroller#query_diff_exp_genes()","queryanalysiscontroller#query_diff_exp_transcripts()","queryanalysiscontroller#query_transcript_isoforms()","queryanalysiscontroller#query_using_blastn()","queryanalysiscontroller#query_using_tblastn()","queryanalysiscontroller#query_using_tblastx()","applicationhelper#querying_indicator()","homecontroller#report_issue()","reportissue#report_issue()","blastutil::rollback_blast_database()","uploadcuffdiff#save()","uploadfastasequences#save()","uploadtrinitywithedger#save()","confirmuser#send_confirmation_emails()","deleteunconfirmeduser#send_rejection_email_and_destroy_user()","homemailer#send_report_on_issue()","getgenefastas#set_attributes()","gettranscriptfasta#set_attributes()","abstractqueryusingblast#set_attributes_and_defaults()","findgotermsfordataset#set_attributes_and_defaults()","querydiffexpgenes#set_attributes_and_defaults()","querydiffexptranscripts#set_attributes_and_defaults()","querytranscriptisoforms#set_attributes_and_defaults()","queryusingblastn#set_attributes_and_defaults()","queryusingtblastn#set_attributes_and_defaults()","queryusingtblastx#set_attributes_and_defaults()","reportissue#set_attributes_and_defaults()","uploadcuffdiff#set_attributes_and_defaults()","uploadfastasequences#set_attributes_and_defaults()","uploadtrinitywithedger#set_attributes_and_defaults()","trinityfpkmfileprocessor#set_fpkms_for_item()","systemutil::system!()","registrationscontroller#update()","queryanalysiscontroller#upload_cuffdiff()","queryanalysiscontroller#upload_fasta_sequences()","queryanalysiscontroller#upload_trinity_with_edger()","arrayelementsarenotemptyvalidator#validate_each()","arrayofuploadedfilesvalidator#validate_each()","arrayvalidator#validate_each()","datasetbelongstouservalidator#validate_each()","datasetnameuniqueforuservalidator#validate_each()","hasfastafileextensionvalidator#validate_each()","nameisgeneexpdiffvalidator#validate_each()","nameisisoformexpdiffvalidator#validate_each()","nameisisoformfpkmtrackingvalidator#validate_each()","nameistrinityfastavalidator#validate_each()","nucleotidefastasequencesvalidator#validate_each()","proteinfastasequencesvalidator#validate_each()","samplebelongstouservalidator#validate_each()","samplecomparisonbelongstouservalidator#validate_each()","unconfirmeduservalidator#validate_each()","uploadedfilevalidator#validate_each()","viewmodelbooleanvalidator#validate_each()","admincontroller#view_confirmed_users()","admincontroller#view_unconfirmed_users()","homecontroller#welcome()",""],"info":[["AbstractQueryUsingBlast","","AbstractQueryUsingBlast.html","","<p>Abstract view model for the view models of all of the blast pages.\n<p><strong>Associated Controller:</strong> QueryAnalysisController ...\n"],["AdminController","","AdminController.html","","<p>Handles all actions related to administrative functions.\n"],["AdminHelper","","AdminHelper.html","","<p>Contains all the helper methods for the AdminController\n"],["ApplicationController","","ApplicationController.html","","<p>The base class for all other controllers in the project.\n"],["ApplicationHelper","","ApplicationHelper.html","","<p>Contains helpers used within all the controllers\n"],["ArrayElementsAreNotEmptyValidator","","ArrayElementsAreNotEmptyValidator.html","","<p>Validator class to verify that there are no blank elements in an array.\n"],["ArrayOfUploadedFilesValidator","","ArrayOfUploadedFilesValidator.html","","<p>Validator class to verify that an array contains uploaded file objects.\n"],["ArrayValidator","","ArrayValidator.html","","<p>Validator class to verify that the item being validated is an array.\n"],["BlastUtil","","BlastUtil.html","","<p>Utility class for adding/removing blast databases.\n"],["ConfirmUser","","ConfirmUser.html","","<p>View model for the confirm user page.\n<p><strong>Associated Controller:</strong> AdminController\n"],["ConfirmationsController","","ConfirmationsController.html","","<p>A subclass of the Devise gem’s confirmations controller. This subclass just\nprevents a user from getting …\n"],["Dataset","","Dataset.html","","<p>Description\n<p>Represents a set of data from one run of  Use Case 1: Upload Data to the\nDatabase. All data …\n"],["DatasetBelongsToUserValidator","","DatasetBelongsToUserValidator.html","","<p>Validator class to verify that the Dataset for the dataset id being\nvalidated  is owned by the current …\n"],["DatasetNameUniqueForUserValidator","","DatasetNameUniqueForUserValidator.html","","<p>Validator class to verify that the Dataset for the dataset id being \nvalidated does not have the same …\n"],["DeleteUnconfirmedUser","","DeleteUnconfirmedUser.html","","<p>View model for the delete unconfirmed user page.\n<p><strong>Associated Controller:</strong> AdminController\n"],["DifferentialExpressionTest","","DifferentialExpressionTest.html","","<p>Description\n<p>Represents a differential expression test for a gene or transcript.  In a\ndifferential expression …\n"],["FindGoTermsForDataset","","FindGoTermsForDataset.html","","<p>View model for the find go terms for dataset page.\n<p><strong>Associated Controller:</strong> QueryAnalysisController\n<p><strong>Associated</strong> ...\n"],["FpkmSample","","FpkmSample.html","","<p>Description\n<p>Represents an FPKM sample for a given transcript and sample. FPKM is a  way\nto measure gene …\n"],["Gene","","Gene.html","","<p>Description\n<p>Represents a gene from the upload data files.\n<p>Schema Information\n"],["GeneNameQueryConditionGenerator","","GeneNameQueryConditionGenerator.html","","<p>Utility class to create a where clause query condition to  match a\nspecified gene name.\n"],["GetGeneFastas","","GetGeneFastas.html","","<p>View model for displaying the fasta sequences for the transcripts\nassociated  with a given gene.\n<p><strong>Associated</strong> ...\n"],["GetTranscriptFasta","","GetTranscriptFasta.html","","<p>View model for displaying the fasta sequence for a given transcript.\n<p><strong>Associated Controller:</strong> QueryAnalysisController ...\n"],["GoFilterChecker","","GoFilterChecker.html","","<p>Utility class to see whether the transcript passes the filter of \ncontaining the specified go terms and …\n"],["GoIdsQueryConditionGenerator","","GoIdsQueryConditionGenerator.html","","<p>Utility class to create a where clause query condition to  match one or\nmore GO ids (accessions).\n"],["GoTerm","","GoTerm.html","","<p>Description\n<p>GoTerm represents a gene ontology (GO) term from the website \ngeneontology.org, which provides …\n"],["GoTermFinderAndProcessor","","GoTermFinderAndProcessor.html","","<p>Utility class to find the Gene Ontology (GO) terms for a dataset and  store\nthem in the database.\n"],["GoTermsQueryConditionGenerator","","GoTermsQueryConditionGenerator.html","","<p>Utility class to create a where clause query condition to  match one or\nmore GO terms (names).\n"],["HasFastaFileExtensionValidator","","HasFastaFileExtensionValidator.html","","<p>Validator class to verify that an uploaded file is a fasta file by checking\nits file extension.\n"],["HomeController","","HomeController.html","","<p>Handles actions for the home page and reporting an issue.\n"],["HomeHelper","","HomeHelper.html","","<p>Contains helpers for the HomeController\n"],["HomeMailer","","HomeMailer.html","","<p>Mailer class for emails in the HomeController\n"],["NameIsGeneExpDiffValidator","","NameIsGeneExpDiffValidator.html","","<p>Validator class to verify that an uploaded file has the name\n“gene_exp.diff”.\n"],["NameIsIsoformExpDiffValidator","","NameIsIsoformExpDiffValidator.html","","<p>Validator class to verify that an uploaded file has the name\n“isoform_exp.diff”.\n"],["NameIsIsoformFpkmTrackingValidator","","NameIsIsoformFpkmTrackingValidator.html","","<p>Validator class to verify that an uploaded file has the name \n“isoforms.fpkm_tracking”.\n"],["NameIsTrinityFastaValidator","","NameIsTrinityFastaValidator.html","","<p>Validator class to verify that an uploaded file has the name\n“Trinity.fasta”.\n"],["NucleotideFastaSequencesValidator","","NucleotideFastaSequencesValidator.html","","<p>Validator class to verify that the value being validated is a valid \nnucleotide fasta sequence or group …\n"],["ProteinFastaSequencesValidator","","ProteinFastaSequencesValidator.html","","<p>Validator class to verify that the value being validated is a valid \nprotein fasta sequence or group …\n"],["QueryAnalysisController","","QueryAnalysisController.html","","<p>Handles all actions related to querying the Postgresql database, blast \ndatabases, uploading data for …\n"],["QueryAnalysisHelper","","QueryAnalysisHelper.html","","<p>Contains helpers for the QueryAnalysisController\n"],["QueryAnalysisMailer","","QueryAnalysisMailer.html","","<p>Mailer class for emails in the QueryAnalysisController\n"],["QueryDiffExpGenes","","QueryDiffExpGenes.html","","<p>View model for the query differentially expressed genes page.\n<p><strong>Associated Controller:</strong> QueryAnalysisController ...\n"],["QueryDiffExpTranscripts","","QueryDiffExpTranscripts.html","","<p>View model for the query differentially expressed transcripts page.\n<p><strong>Associated Controller:</strong> QueryAnalysisController ...\n"],["QueryTranscriptIsoforms","","QueryTranscriptIsoforms.html","","<p>View model for the query transcript isoforms page.\n<p><strong>Associated Controller:</strong> QueryAnalysisController\n"],["QueryUsingBlastn","","QueryUsingBlastn.html","","<p>View model for the query using Blastn page.\n<p><strong>Associated Controller:</strong> QueryAnalysisController\n"],["QueryUsingTblastn","","QueryUsingTblastn.html","","<p>View model for the query using Tblastn page.\n<p><strong>Associated Controller:</strong> QueryAnalysisController\n"],["QueryUsingTblastx","","QueryUsingTblastx.html","","<p>View model for the query using Tblastx page.\n<p><strong>Associated Controller:</strong> QueryAnalysisController\n"],["RegistrationMailer","","RegistrationMailer.html","","<p>Mailer class for emails related to user registration.\n"],["RegistrationsController","","RegistrationsController.html","","<p>A subclass of the Devise gem’s registrations controller.\n<p>This subclass alters the registration process …\n"],["ReportIssue","","ReportIssue.html","","<p>View model for the report issue page.\n<p><strong>Associated Controller:</strong> HomeController\n"],["Sample","","Sample.html","","<p>Description\n<p>Sample represents a sample from one of the uploaded data files.  For\nexample, one sample might …\n"],["SampleBelongsToUserValidator","","SampleBelongsToUserValidator.html","","<p>Validator class to verify that Sample for the sample id being validated  is\nowned by the current user. …\n"],["SampleComparison","","SampleComparison.html","","<p>Description\n<p>SampleComparison represents comparison between two samples for \ndifferential expression testing. …\n"],["SampleComparisonBelongsToUserValidator","","SampleComparisonBelongsToUserValidator.html","","<p>Validator class to verify that SampleComparison for the sample comparison\nid  being validated is owned …\n"],["SampleFpkm","","SampleFpkm.html","","<p>An fpkm value paired with the name of the sample it belongs to\n"],["SystemUtil","","SystemUtil.html","","<p>Utility class containing useful functions for interacting with the system.\n"],["Transcript","","Transcript.html","","<p>Description\n<p>Represents a transcript from the upload data files.\n<p>Schema Information\n"],["TranscriptFpkmTrackingInformation","","TranscriptFpkmTrackingInformation.html","","<p>Description\n<p>Represents additional transcript classification information for a\nTranscript.\n<p>Schema Information …\n"],["TranscriptHasGoTerm","","TranscriptHasGoTerm.html","","<p>Description\n<p>Represents a bridge table designed to show the relationship between \nTranscript records and …\n"],["TranscriptNameQueryConditionGenerator","","TranscriptNameQueryConditionGenerator.html","","<p>Utility class to create a where clause query condition to  match a\nspecified gene name.\n"],["TrinityDiffExpFileProcessor","","TrinityDiffExpFileProcessor.html","","<p>Abstract utility class for processing trinity differential expression files\n"],["TrinityDiffExpLine","","TrinityDiffExpLine.html","","<p>Represents a single line of an uploaded Trinity differential expression\nfile\n"],["TrinityFpkmFileProcessor","","TrinityFpkmFileProcessor.html","","<p>Abstract Utility class for processing trinity fpkm files\n"],["TrinityFpkmLine","","TrinityFpkmLine.html","","<p>Represents a single line of an uploaded Trinity fpkm file\n"],["TrinityGeneDiffExpFileProcessor","","TrinityGeneDiffExpFileProcessor.html","","<p>Utility class for processing trinity gene differential expression files\n"],["TrinityGeneFpkmFileProcessor","","TrinityGeneFpkmFileProcessor.html","","<p>Utility class for processing trinity gene fpkm files\n"],["TrinityTranscriptDiffExpFileProcessor","","TrinityTranscriptDiffExpFileProcessor.html","","<p>Utility class for processing trinity transcript differential expression\nfiles\n"],["TrinityTranscriptFpkmFileProcessor","","TrinityTranscriptFpkmFileProcessor.html","","<p>Utility class for processing trinity transcript fpkm files\n"],["UnconfirmedUserValidator","","UnconfirmedUserValidator.html","","<p>Validator class to verify that the User being validated is an unconfirmed \nuser.\n"],["UploadCuffdiff","","UploadCuffdiff.html","","<p>View model for the upload Cuffdiff page.\n<p><strong>Associated Controller:</strong> QueryAnalysisController\n<p><strong>Associated Worker:</strong> ...\n"],["UploadFastaSequences","","UploadFastaSequences.html","","<p>View model for the upload fasta sequences page.\n<p><strong>Associated Controller:</strong> QueryAnalysisController\n<p><strong>Associated</strong> ...\n"],["UploadTrinityWithEdgeR","","UploadTrinityWithEdgeR.html","","<p>View model for the upload Trinity with EdgeR page.\n<p><strong>Associated Controller:</strong> QueryAnalysisController\n<p><strong>Associated</strong> ...\n"],["UploadedFileValidator","","UploadedFileValidator.html","","<p>Validator class to verify that the value being validated is an uploaded \nfile object.\n"],["UploadedTrinityDiffExpFile","","UploadedTrinityDiffExpFile.html","","<p>Represents an uploaded Trinity differential expression file\n"],["UploadedTrinityFpkmFile","","UploadedTrinityFpkmFile.html","","<p>Represents an uploaded Trinity fpkm file\n"],["User","","User.html","","<p>Description\n<p>A user represents a user of the system. All datasets are tied to the  user\nwho uploaded them. …\n"],["ViewModelBooleanValidator","","ViewModelBooleanValidator.html","","<p>Validator class to verify that the value is either “1” or “0”, which is \nhow booleans …\n"],["WorkerForFindGoTermsForDataset","","WorkerForFindGoTermsForDataset.html","","<p>Worker class that runs jobs to find the GoTerm records that relate to a\n<p>dataset in a background queue …\n"],["WorkerForUploadCuffdiff","","WorkerForUploadCuffdiff.html","","<p>Worker class that runs jobs to upload a Cuffdiff dataset in a background \nqueue so that the user can …\n"],["WorkerForUploadFastaSequences","","WorkerForUploadFastaSequences.html","","<p>Worker class that runs jobs to upload a fasta sequences dataset in a \nbackground queue so that the user …\n"],["WorkerForUploadTrinityWithEdger","","WorkerForUploadTrinityWithEdger.html","","<p>Worker class that runs jobs to upload a Trinity with EdgeR dataset in  a\nbackground queue so that the …\n"],["add_sample_cmp_for_trinity_with_edger_genes","QueryAnalysisController","QueryAnalysisController.html#method-i-add_sample_cmp_for_trinity_with_edger_genes","()","<p>For the upload Trinity with EdgeR page, ajax request to add html to the \nform to upload an additional …\n"],["add_sample_cmp_for_trinity_with_edger_transcripts","QueryAnalysisController","QueryAnalysisController.html#method-i-add_sample_cmp_for_trinity_with_edger_transcripts","()","<p>For the upload Trinity with EdgeR page, ajax request to add html to the \nform to upload an additional …\n"],["ascending_sort_arrow","QueryAnalysisHelper","QueryAnalysisHelper.html#method-i-ascending_sort_arrow","()","<p>Displays an ascending sort arrow used for table sorting\n"],["backticks!","SystemUtil","SystemUtil.html#method-c-backticks-21","(command_string)","<p>Runs the specified command_string on the system, returning any output and \nraising an exception if the …\n"],["blast","AbstractQueryUsingBlast","AbstractQueryUsingBlast.html#method-i-blast","()","<p>Blast the dataset’s blast database and return the results as a \nBio::Blast::Report object.\n"],["cleanup_files","AbstractQueryUsingBlast","AbstractQueryUsingBlast.html#method-i-cleanup_files","()","<p>Delete the temporary files generated during the blast query\n"],["confirm_user","AdminController","AdminController.html#method-i-confirm_user","()","<p>Handles all the GET and POST requests for the confirm user page\n"],["create","RegistrationsController","RegistrationsController.html#method-i-create","()","<p>POST /resource\n"],["create_sample_comparison","TrinityDiffExpFileProcessor","TrinityDiffExpFileProcessor.html#method-i-create_sample_comparison","()","<p>Creates the Sample and SampleComparison records from this differential \nexpression file if they don’t …\n"],["delete","GoTerm","GoTerm.html#method-i-delete","()","<p>Overides this method to prevent it from destroying GoTerm records because\nGoTerm records reside in the …\n"],["delete_unconfirmed_user","AdminController","AdminController.html#method-i-delete_unconfirmed_user","()","<p>Handles all the GET and POST requests for the delete unconfirmed user page\n"],["descending_sort_arrow","QueryAnalysisHelper","QueryAnalysisHelper.html#method-i-descending_sort_arrow","()","<p>Displays a descending sort arrow used for table sorting\n"],["destroy","GoTerm","GoTerm.html#method-i-destroy","()","<p>Overides this method to prevent it from destroying GoTerm records because\nGoTerm records reside in the …\n"],["eof?","UploadedTrinityDiffExpFile","UploadedTrinityDiffExpFile.html#method-i-eof-3F","()","<p>Whether the eof marker has been reached for the file\n"],["eof?","UploadedTrinityFpkmFile","UploadedTrinityFpkmFile.html#method-i-eof-3F","()","<p>Whether the eof marker has been reached for the file\n"],["find_and_save","FindGoTermsForDataset","FindGoTermsForDataset.html#method-i-find_and_save","()","<p>Find the GoTerm records for the dataset specified in dataset_id and then \nsave the associated between …\n"],["find_go_terms","GoTermFinderAndProcessor","GoTermFinderAndProcessor.html#method-i-find_go_terms","()","<p>Finds the go terms by running blastx and blast2go\n"],["find_go_terms_for_dataset","QueryAnalysisController","QueryAnalysisController.html#method-i-find_go_terms_for_dataset","()","<p>Handles both GET and POST requests for the find go terms for dataset page.\n<p><strong>Associated ViewModel:</strong> FindGoTermsForDataset ...\n"],["generate_blast_report_from_xml_results","AbstractQueryUsingBlast","AbstractQueryUsingBlast.html#method-i-generate_blast_report_from_xml_results","()","<p>Read the xml results file from the blast, turn it into a \nBio::Blast::Report object,  and return it\n"],["generate_execution_string","AbstractQueryUsingBlast","AbstractQueryUsingBlast.html#method-i-generate_execution_string","()","<p>This is an abstract method that must be implemented in the subclass.  It\ngenerates the execution string …\n"],["generate_query_condition","GeneNameQueryConditionGenerator","GeneNameQueryConditionGenerator.html#method-i-generate_query_condition","()","<p>Generates and returns the actual where clause query condition.\n"],["generate_query_condition","GoIdsQueryConditionGenerator","GoIdsQueryConditionGenerator.html#method-i-generate_query_condition","()","<p>Generates and returns the actual where clause query condition.\n"],["generate_query_condition","GoTermsQueryConditionGenerator","GoTermsQueryConditionGenerator.html#method-i-generate_query_condition","()","<p>Generates and returns the actual where clause query condition.\n"],["generate_query_condition","TranscriptNameQueryConditionGenerator","TranscriptNameQueryConditionGenerator.html#method-i-generate_query_condition","()","<p>Generates and returns the actual where clause query condition.\n"],["get_blastn_gap_costs_for_match_and_mismatch_scores","QueryAnalysisController","QueryAnalysisController.html#method-i-get_blastn_gap_costs_for_match_and_mismatch_scores","()","<p>When a new set of match/mismatch scores is selected on the query using \nblastn page, handles ajax requests …\n"],["get_color_for_score","QueryAnalysisHelper","QueryAnalysisHelper.html#method-i-get_color_for_score","(score)","<p>Returns a color based on the specified blast score\n"],["get_end_width_percent","QueryAnalysisHelper","QueryAnalysisHelper.html#method-i-get_end_width_percent","(hsp)","<p>Returns the ending width percent page needed for some calculations on  the\nblast results page.\n"],["get_gene_diff_exp_samples_for_dataset","QueryAnalysisController","QueryAnalysisController.html#method-i-get_gene_diff_exp_samples_for_dataset","()","<p>When a new dataset is selected on the query differentially expressed page, \nhandles ajax requests to …\n"],["get_gene_fastas","QueryAnalysisController","QueryAnalysisController.html#method-i-get_gene_fastas","()","<p>Handles requests to display the fasta sequences for the transcripts \nassociated with a given gene.\n<p><strong>Associated</strong> ...\n"],["get_if_dataset_has_go_terms","QueryAnalysisController","QueryAnalysisController.html#method-i-get_if_dataset_has_go_terms","()","<p>Handles ajax requests asking whether a dataset has go terms. Returns a \nboolean value or an error message. …\n"],["get_next_line","UploadedTrinityDiffExpFile","UploadedTrinityDiffExpFile.html#method-i-get_next_line","()","<p>Get the next TrinityDiffExpLine, or nil if the file line could not be \nparsed into a TrinityDiffExpLine …\n"],["get_next_line","UploadedTrinityFpkmFile","UploadedTrinityFpkmFile.html#method-i-get_next_line","()","<p>Get the next TrinityFpkmLine, or nil if the file line could not be  parsed\ninto a TrinityFpkmLine.\n"],["get_query_diff_exp_genes_header_row","QueryAnalysisController","QueryAnalysisController.html#method-i-get_query_diff_exp_genes_header_row","()","<p>For the query differentially expressed genes page,  ajax request to add the\ntable header row to the query …\n"],["get_query_diff_exp_transcripts_header_row","QueryAnalysisController","QueryAnalysisController.html#method-i-get_query_diff_exp_transcripts_header_row","()","<p>For the query differentially expressed transcripts page,  ajax request to\nadd the table header row to …\n"],["get_query_transcript_isoforms_header_row","QueryAnalysisController","QueryAnalysisController.html#method-i-get_query_transcript_isoforms_header_row","()","<p>For the query transcript isoforms page,  ajax request to add the table\nheader row to the query results …\n"],["get_start_width_percent","QueryAnalysisHelper","QueryAnalysisHelper.html#method-i-get_start_width_percent","(hsp)","<p>Returns the starting width percent page needed for some calculations on \nthe blast results page.\n"],["get_tblastn_gap_costs_for_matrix","QueryAnalysisController","QueryAnalysisController.html#method-i-get_tblastn_gap_costs_for_matrix","()","<p>When a new matrix is selected on the query using Tblastn page,  handles\najax requests to get the gap …\n"],["get_tooltip","QueryAnalysisHelper","QueryAnalysisHelper.html#method-i-get_tooltip","(hit, hsp)","<p>Returns a tooltip to use for hsps in the blast graphical summary\n"],["get_transcript_diff_exp_samples_for_dataset","QueryAnalysisController","QueryAnalysisController.html#method-i-get_transcript_diff_exp_samples_for_dataset","()","<p>When a new dataset is selected on the query differentially expressed \ntranscripts page, handles ajax …\n"],["get_transcript_fasta","QueryAnalysisController","QueryAnalysisController.html#method-i-get_transcript_fasta","()","<p>Handles requests to display the fasta sequence for a given transcript.\n<p><strong>Associated ViewModel:</strong> GetTranscriptFasta ...\n"],["get_transcript_isoforms_samples_for_dataset","QueryAnalysisController","QueryAnalysisController.html#method-i-get_transcript_isoforms_samples_for_dataset","()","<p>When a new dataset is selected on the query transcript isoforms page, \nhandles ajax requests to get the …\n"],["get_unique_hit_id","QueryAnalysisHelper","QueryAnalysisHelper.html#method-i-get_unique_hit_id","(report,iteration,hit)","<p>Returns a unique html id for a blast result hit that can be used to link \ndirectly to the hit\n"],["go_terms","Transcript","Transcript.html#method-i-go_terms","()","<p>The GoTerm records associated with this Transcript.\n"],["help_tip","ApplicationHelper","ApplicationHelper.html#method-i-help_tip","(id, position = :right)","<p>Diplays for the page the help tip with the specified id\n"],["link_to_amigo_web_page_for_term","QueryAnalysisHelper","QueryAnalysisHelper.html#method-i-link_to_amigo_web_page_for_term","(body,go_id)","<p>Displays a link to the Gene Onotology website for the specified go_id \nhaving the text specified in body. …\n"],["link_to_fasta_sequence_for_transcript","QueryAnalysisHelper","QueryAnalysisHelper.html#method-i-link_to_fasta_sequence_for_transcript","(dataset_id, transcript_name)","<p>Displays a link to the fasta sequence for a given transcript name in a \ngiven dataset.\n"],["link_to_fasta_sequences_for_gene","QueryAnalysisHelper","QueryAnalysisHelper.html#method-i-link_to_fasta_sequences_for_gene","(dataset_id, gene_name)","<p>Displays a link to the fasta sequences for the transcripts for a given \ngene name in a given dataset. …\n"],["link_to_ncbi_search_for","QueryAnalysisHelper","QueryAnalysisHelper.html#method-i-link_to_ncbi_search_for","(search_term)","<p>Displays a link to the NCBI search website for the specified search term\n"],["logo","ApplicationHelper","ApplicationHelper.html#method-i-logo","()","<p>Displays the site logo\n"],["makeblastdb_with_seqids","BlastUtil","BlastUtil.html#method-c-makeblastdb_with_seqids","(fasta_file_path, dataset)","<p>Creates a blast database for the specified dataset using the  given fasta\nfile. Seq ids are parsed when …\n"],["makeblastdb_without_seqids","BlastUtil","BlastUtil.html#method-c-makeblastdb_without_seqids","(fasta_file_path, dataset)","<p>Creates a blast database for the specified dataset using the  given fasta\nfile. Seq ids are not parsed …\n"],["more_info_link","ApplicationHelper","ApplicationHelper.html#method-i-more_info_link","(url)","<p>Displays a link with the text ‘More Info’ to the specified URL\n"],["new","AbstractQueryUsingBlast","AbstractQueryUsingBlast.html#method-c-new","(current_user)","<p>parameters &mdash; \n<p><strong>current_user:</strong> The currently logged in user\n\n"],["new","ConfirmUser","ConfirmUser.html#method-c-new","(attributes = {})","<p>parameters &mdash; \n<p><strong>attributes:</strong> A hash containing any instance attributes\n\n"],["new","ConfirmationsController","ConfirmationsController.html#method-i-new","()","<p>Handles requests to create a new confirmation email. I overrode this \naction because the user shouldn’t …\n"],["new","DeleteUnconfirmedUser","DeleteUnconfirmedUser.html#method-c-new","(attributes = {})","<p>parameters &mdash; \n<p><strong>attributes:</strong> A hash containing any instance attributes\n\n"],["new","FindGoTermsForDataset","FindGoTermsForDataset.html#method-c-new","(current_user)","<p>parameters &mdash; \n<p><strong>current_user:</strong> The currently logged in user\n\n"],["new","GeneNameQueryConditionGenerator","GeneNameQueryConditionGenerator.html#method-c-new","(attributes = {})","<p>parameters &mdash; \n<p><strong>attributes:</strong> A hash containing any instance attributes\n\n"],["new","GetGeneFastas","GetGeneFastas.html#method-c-new","(current_user)","<p>parameters &mdash; \n<p><strong>current_user:</strong> The currently logged in user\n\n"],["new","GetTranscriptFasta","GetTranscriptFasta.html#method-c-new","(current_user)","<p>parameters &mdash; \n<p><strong>current_user:</strong> The currently logged in user\n\n"],["new","GoFilterChecker","GoFilterChecker.html#method-c-new","(transcript_id, go_ids, go_terms)","<p>parameters &mdash; \n<p><strong>transcript_id:</strong> the id of the Transcript to check\n<p><strong>go_ids:</strong> a string containing the go ids to ...\n"],["new","GoIdsQueryConditionGenerator","GoIdsQueryConditionGenerator.html#method-c-new","(go_ids_string)","<p>parameters &mdash; \n<p><strong>go_ids_string:</strong> The string containing the go ids or group\nof  go ids to use when creating the ...\n\n"],["new","GoTermFinderAndProcessor","GoTermFinderAndProcessor.html#method-c-new","(transcripts_fasta_file,dataset)","<p>parameters &mdash; \n<p><strong>transcripts_fasta_file:</strong> The fasta file needed to find the\ngo terms\n<p><strong>dataset:</strong> the dataset to ...\n\n"],["new","GoTermsQueryConditionGenerator","GoTermsQueryConditionGenerator.html#method-c-new","(go_terms_string)","<p>parameters &mdash; \n<p><strong>go_terms_string:</strong> The string containing the go term or\ngroup of  go terms to use when creating ...\n\n"],["new","QueryDiffExpGenes","QueryDiffExpGenes.html#method-c-new","(current_user)","<p>parameters &mdash; \n<p><strong>current_user:</strong> The currently logged in user\n\n"],["new","QueryDiffExpTranscripts","QueryDiffExpTranscripts.html#method-c-new","(current_user)","<p>parameters &mdash; \n<p><strong>current_user:</strong> The currently logged in user\n\n"],["new","QueryTranscriptIsoforms","QueryTranscriptIsoforms.html#method-c-new","(current_user)","<p>parameters &mdash; \n<p><strong>current_user:</strong> The currently logged in user\n\n"],["new","QueryUsingBlastn","QueryUsingBlastn.html#method-c-new","(current_user)","<p>parameters &mdash; \n<p><strong>current_user:</strong> The currently logged in user\n\n"],["new","QueryUsingTblastn","QueryUsingTblastn.html#method-c-new","(current_user)","<p>parameters &mdash; \n<p><strong>current_user:</strong> The currently logged in user\n\n"],["new","QueryUsingTblastx","QueryUsingTblastx.html#method-c-new","(current_user)","<p>parameters &mdash; \n<p><strong>current_user:</strong> The currently logged in user\n\n"],["new","ReportIssue","ReportIssue.html#method-c-new","(current_user)","<p>parameters &mdash; \n<p><strong>current_user:</strong> The currently logged in user\n\n"],["new","TranscriptNameQueryConditionGenerator","TranscriptNameQueryConditionGenerator.html#method-c-new","(attributes = {})","<p>parameters &mdash; \n<p><strong>attributes:</strong> A hash containing any instance attributes\n\n"],["new","TrinityDiffExpFileProcessor","TrinityDiffExpFileProcessor.html#method-c-new","(uploaded_file, dataset,sample_1_name, sample_2_name)","<p>parameters &mdash; \n<p><strong>uploaded_file:</strong> The uploaded file to process\n<p><strong>dataset:</strong> The dataset for this upload operation ...\n"],["new","TrinityFpkmFileProcessor","TrinityFpkmFileProcessor.html#method-c-new","(uploaded_fpkm_file,dataset)","<p>parameters &mdash; \n<p><strong>uploaded_file:</strong> The uploaded file to process\n<p><strong>dataset:</strong> The dataset for this upload operation ...\n\n"],["new","TrinityGeneDiffExpFileProcessor","TrinityGeneDiffExpFileProcessor.html#method-c-new","(uploaded_file, dataset, sample_1_name, sample_2_name)","<p>parameters &mdash; \n<p><strong>uploaded_file:</strong> The uploaded file to process\n<p><strong>dataset:</strong> The dataset for this upload operation ...\n"],["new","TrinityTranscriptDiffExpFileProcessor","TrinityTranscriptDiffExpFileProcessor.html#method-c-new","(uploaded_file, dataset, sample_1_name, sample_2_name)","<p>parameters &mdash; \n<p><strong>uploaded_file:</strong> The uploaded file to process\n<p><strong>dataset:</strong> The dataset for this upload operation ...\n"],["new","UploadCuffdiff","UploadCuffdiff.html#method-c-new","(current_user)","<p>parameters &mdash; \n<p><strong>current_user:</strong> The currently logged in user\n\n"],["new","UploadFastaSequences","UploadFastaSequences.html#method-c-new","(current_user)","<p>parameters &mdash; \n<p><strong>current_user:</strong> The currently logged in user\n\n"],["new","UploadTrinityWithEdgeR","UploadTrinityWithEdgeR.html#method-c-new","(current_user)","<p>parameters &mdash; \n<p><strong>current_user:</strong> The currently logged in user\n\n"],["new","UploadedTrinityDiffExpFile","UploadedTrinityDiffExpFile.html#method-c-new","(uploaded_file)","<p>parameters &mdash; \n<p><strong>uploaded_file:</strong> The uploaded file to provide a wrapper for\n\n"],["new","UploadedTrinityFpkmFile","UploadedTrinityFpkmFile.html#method-c-new","(uploaded_file)","<p>parameters &mdash; \n<p><strong>uploaded_file:</strong> The uploaded file to provide a wrapper for\n\n"],["notify_admin_of_registration_request_email","RegistrationMailer","RegistrationMailer.html#method-i-notify_admin_of_registration_request_email","(user)","<p>Sends an email to all of the administrators stating that  the specified\nuser has requested to register …\n"],["notify_user_of_blast2go_failure","QueryAnalysisMailer","QueryAnalysisMailer.html#method-i-notify_user_of_blast2go_failure","(user, dataset)","<p>Sends an email to the specified user that the specified dataset failed to \nhave its go terms found.\n"],["notify_user_of_blast2go_success","QueryAnalysisMailer","QueryAnalysisMailer.html#method-i-notify_user_of_blast2go_success","(user, dataset)","<p>Sends an email to the specified user that the specified dataset had its  go\nterms found successfully. …\n"],["notify_user_of_rejection","RegistrationMailer","RegistrationMailer.html#method-i-notify_user_of_rejection","(user, optional_note_to_user)","<p>Sends an email to the specified user stating that their registration \nrequest has been rejected.\n"],["notify_user_of_upload_failure","QueryAnalysisMailer","QueryAnalysisMailer.html#method-i-notify_user_of_upload_failure","(user, dataset)","<p>Sends an email to the specified user that the specified dataset did not \nupload successfully.\n"],["notify_user_of_upload_success","QueryAnalysisMailer","QueryAnalysisMailer.html#method-i-notify_user_of_upload_success","(user, dataset)","<p>Sends an email to the specified user that the specified dataset was \nsuccessfully uploaded.\n"],["notify_user_that_confirmation_email_will_be_sent","RegistrationMailer","RegistrationMailer.html#method-i-notify_user_that_confirmation_email_will_be_sent","(user, optional_note_to_user)","<p>Sends an email to the specified user stating that they have  just been\nconfirmed by the administrator …\n"],["passes_go_filters","GoFilterChecker","GoFilterChecker.html#method-i-passes_go_filters","()","<p>Returns whether or not the transcript has the required go terms and go ids\n"],["perform","WorkerForFindGoTermsForDataset","WorkerForFindGoTermsForDataset.html#method-i-perform","(find_go_terms_for_dataset)","<p>The method for the worker to perform its work\n"],["perform","WorkerForUploadCuffdiff","WorkerForUploadCuffdiff.html#method-i-perform","(upload_cuffdiff)","<p>The method for the worker to perform its work\n"],["perform","WorkerForUploadFastaSequences","WorkerForUploadFastaSequences.html#method-i-perform","(upload_fasta_sequences)","<p>The method for the worker to perform its work\n"],["perform","WorkerForUploadTrinityWithEdger","WorkerForUploadTrinityWithEdger.html#method-i-perform","(upload_trinity_with_edger)","<p>The method for the worker to perform its work\n"],["persisted?","AbstractQueryUsingBlast","AbstractQueryUsingBlast.html#method-i-persisted-3F","()","<p>Accoring railscasts.com/episodes/219-active-model?view=asciicast, this\ndefines that this model does not …\n"],["persisted?","ConfirmUser","ConfirmUser.html#method-i-persisted-3F","()","<p>Accoring railscasts.com/episodes/219-active-model?view=asciicast, this\ndefines that this model does not …\n"],["persisted?","DeleteUnconfirmedUser","DeleteUnconfirmedUser.html#method-i-persisted-3F","()","<p>Accoring railscasts.com/episodes/219-active-model?view=asciicast, this\ndefines that this model does not …\n"],["persisted?","FindGoTermsForDataset","FindGoTermsForDataset.html#method-i-persisted-3F","()","<p>According to railscasts.com/episodes/219-active-model?view=asciicast, this\ndefines that this view model …\n"],["persisted?","GetGeneFastas","GetGeneFastas.html#method-i-persisted-3F","()","<p>According to railscasts.com/episodes/219-active-model?view=asciicast, this\ndefines that this view model …\n"],["persisted?","GetTranscriptFasta","GetTranscriptFasta.html#method-i-persisted-3F","()","<p>According to railscasts.com/episodes/219-active-model?view=asciicast, this\ndefines that this view model …\n"],["persisted?","QueryDiffExpGenes","QueryDiffExpGenes.html#method-i-persisted-3F","()","<p>According to railscasts.com/episodes/219-active-model?view=asciicast, this\ndefines that this view model …\n"],["persisted?","QueryDiffExpTranscripts","QueryDiffExpTranscripts.html#method-i-persisted-3F","()","<p>According to railscasts.com/episodes/219-active-model?view=asciicast, this\ndefines that this view model …\n"],["persisted?","QueryTranscriptIsoforms","QueryTranscriptIsoforms.html#method-i-persisted-3F","()","<p>According to railscasts.com/episodes/219-active-model?view=asciicast, this\ndefines that this view model …\n"],["persisted?","ReportIssue","ReportIssue.html#method-i-persisted-3F","()","<p>According railscasts.com/episodes/219-active-model?view=asciicast, this\ndefines that this model does …\n"],["persisted?","UploadCuffdiff","UploadCuffdiff.html#method-i-persisted-3F","()","<p>According to railscasts.com/episodes/219-active-model?view=asciicast, this\ndefines that this view model …\n"],["persisted?","UploadFastaSequences","UploadFastaSequences.html#method-i-persisted-3F","()","<p>According to railscasts.com/episodes/219-active-model?view=asciicast, this\ndefines that this view model …\n"],["persisted?","UploadTrinityWithEdgeR","UploadTrinityWithEdgeR.html#method-i-persisted-3F","()","<p>According to railscasts.com/episodes/219-active-model?view=asciicast, this\ndefines that this view model …\n"],["prepare_IO_files","AbstractQueryUsingBlast","AbstractQueryUsingBlast.html#method-i-prepare_IO_files","()","<p>Create some temporary files to use for blast querying\n"],["process_file","TrinityDiffExpFileProcessor","TrinityDiffExpFileProcessor.html#method-i-process_file","()","<p>Do the actual processing of the differential expression file. This method \nis only partially implemented …\n"],["process_file","TrinityFpkmFileProcessor","TrinityFpkmFileProcessor.html#method-i-process_file","()","<p>Do the actual processing of the fpkm file. This method needs to be \nimplemented in the subclass.\n"],["process_file","TrinityGeneDiffExpFileProcessor","TrinityGeneDiffExpFileProcessor.html#method-i-process_file","()","<p>Do the actual processing of the gene differential expression file,  writing\nthe records to the database. …\n"],["process_file","TrinityGeneFpkmFileProcessor","TrinityGeneFpkmFileProcessor.html#method-i-process_file","()","<p>Do the actual processing of the gene fpkm file,  writing the records to the\ndatabase.\n"],["process_file","TrinityTranscriptDiffExpFileProcessor","TrinityTranscriptDiffExpFileProcessor.html#method-i-process_file","()","<p>Do the actual processing of the transcript differential expression file, \nwriting the records to the …\n"],["process_file","TrinityTranscriptFpkmFileProcessor","TrinityTranscriptFpkmFileProcessor.html#method-i-process_file","()","<p>Do the actual processing of the transcript fpkm file,  writing the records\nto the database.\n"],["process_go_terms","GoTermFinderAndProcessor","GoTermFinderAndProcessor.html#method-i-process_go_terms","()","<p>Saves the go terms found in the find_go_terms method to the database\n"],["query","GetGeneFastas","GetGeneFastas.html#method-i-query","()","<p>Return the fasta sequences for the transcripts associated with the gene by\nquerying the dataset’s blast …\n"],["query","GetTranscriptFasta","GetTranscriptFasta.html#method-i-query","()","<p>Return the transcripts fasta sequence by querying the dataset’s blast \ndatabase.\n"],["query","QueryDiffExpGenes","QueryDiffExpGenes.html#method-i-query","()","<p>Execute the query to get the gene differential expression tests with the \nspecified filtering options …\n"],["query","QueryDiffExpTranscripts","QueryDiffExpTranscripts.html#method-i-query","()","<p>Execute the query to get the transcript differential expression tests  with\nthe specified filtering options …\n"],["query","QueryTranscriptIsoforms","QueryTranscriptIsoforms.html#method-i-query","()","<p>Execute the query to get the transcript isoforms with the  specified\nfiltering options and store them …\n"],["query_diff_exp_genes","QueryAnalysisController","QueryAnalysisController.html#method-i-query_diff_exp_genes","()","<p>Handles both GET and POST requests for the query differentially expressed \ngenes page.\n<p><strong>Associated ViewModel:</strong> ...\n"],["query_diff_exp_transcripts","QueryAnalysisController","QueryAnalysisController.html#method-i-query_diff_exp_transcripts","()","<p>Handles both GET and POST requests for the query differentially expressed \ntranscripts page.\n<p><strong>Associated</strong> ...\n"],["query_transcript_isoforms","QueryAnalysisController","QueryAnalysisController.html#method-i-query_transcript_isoforms","()","<p>Handles both GET and POST requests for the query transcript isoforms page.\n<p><strong>Associated ViewModel:</strong> QueryTranscriptIsoforms ...\n"],["query_using_blastn","QueryAnalysisController","QueryAnalysisController.html#method-i-query_using_blastn","()","<p>Handles both GET and POST requests for the query using blastn page.\n<p><strong>Associated ViewModel:</strong> QueryUsingBlastn ...\n"],["query_using_tblastn","QueryAnalysisController","QueryAnalysisController.html#method-i-query_using_tblastn","()","<p>Handles both GET and POST requests for the query using tblastn page.\n<p><strong>Associated ViewModel:</strong> QueryUsingTblastn ...\n"],["query_using_tblastx","QueryAnalysisController","QueryAnalysisController.html#method-i-query_using_tblastx","()","<p>Handles both GET and POST requests for the query using Tblastx page.\n<p><strong>Associated ViewModel:</strong> QueryUsingTblastx ...\n"],["querying_indicator","ApplicationHelper","ApplicationHelper.html#method-i-querying_indicator","()","<p>Displays an indicator that querying is currently in-progress\n"],["report_issue","HomeController","HomeController.html#method-i-report_issue","()","<p>Handles GET and POST requests for the report issue page\n"],["report_issue","ReportIssue","ReportIssue.html#method-i-report_issue","()","<p>Report the issue to the adminstrator(s) by sending email(s) containing the \nissue information.\n"],["rollback_blast_database","BlastUtil","BlastUtil.html#method-c-rollback_blast_database","(dataset)","<p>Deletes the blast database for the specified dataset.\n"],["save","UploadCuffdiff","UploadCuffdiff.html#method-i-save","()","<p>Saves the data from the uploaded file(s) into the database under a dataset \nnamed #dataset_name\n"],["save","UploadFastaSequences","UploadFastaSequences.html#method-i-save","()","<p>Saves the data from the uploaded file(s) into the database under a dataset \nnamed #dataset_name\n"],["save","UploadTrinityWithEdgeR","UploadTrinityWithEdgeR.html#method-i-save","()","<p>Saves the data from the uploaded files into the database under a dataset \nnamed #dataset_name\n"],["send_confirmation_emails","ConfirmUser","ConfirmUser.html#method-i-send_confirmation_emails","()","<p>Send the two confirmation emails to the user who was just confirmed.  The\nfirst email tells the user …\n"],["send_rejection_email_and_destroy_user","DeleteUnconfirmedUser","DeleteUnconfirmedUser.html#method-i-send_rejection_email_and_destroy_user","()","<p>Sends an email to the user telling them that their registration request \nhas been denied.\n"],["send_report_on_issue","HomeMailer","HomeMailer.html#method-i-send_report_on_issue","(report_issue)","<p>Email all the administrator’s with information reported in the issue.\n"],["set_attributes","GetGeneFastas","GetGeneFastas.html#method-i-set_attributes","(attributes = {})","<p>Set the view model’s attributes\n"],["set_attributes","GetTranscriptFasta","GetTranscriptFasta.html#method-i-set_attributes","(attributes = {})","<p>Set the view model’s attributes\n"],["set_attributes_and_defaults","AbstractQueryUsingBlast","AbstractQueryUsingBlast.html#method-i-set_attributes_and_defaults","(attributes = {})","<p>Set the view model’s attributes or set those attributes to their  default\nvalues\n"],["set_attributes_and_defaults","FindGoTermsForDataset","FindGoTermsForDataset.html#method-i-set_attributes_and_defaults","(attributes = {})","<p>Set the view model’s attributes or set those attributes to their  default\nvalues\n"],["set_attributes_and_defaults","QueryDiffExpGenes","QueryDiffExpGenes.html#method-i-set_attributes_and_defaults","(attributes = {})","<p>Set the view model’s attributes or set those attributes to their  default\nvalues\n"],["set_attributes_and_defaults","QueryDiffExpTranscripts","QueryDiffExpTranscripts.html#method-i-set_attributes_and_defaults","(attributes = {})","<p>Set the view model’s attributes or set those attributes to their  default\nvalues\n"],["set_attributes_and_defaults","QueryTranscriptIsoforms","QueryTranscriptIsoforms.html#method-i-set_attributes_and_defaults","(attributes = {})","<p>Set the view model’s attributes or set those attributes to their  default\nvalues\n"],["set_attributes_and_defaults","QueryUsingBlastn","QueryUsingBlastn.html#method-i-set_attributes_and_defaults","(attributes = {})","<p>Set the view model’s attributes or set those attributes to their  default\nvalues\n"],["set_attributes_and_defaults","QueryUsingTblastn","QueryUsingTblastn.html#method-i-set_attributes_and_defaults","(attributes = {})","<p>Set the view model’s attributes or set those attributes to their  default\nvalues\n"],["set_attributes_and_defaults","QueryUsingTblastx","QueryUsingTblastx.html#method-i-set_attributes_and_defaults","(attributes = {})","<p>Set the view model’s attributes or set those attributes to their  default\nvalues\n"],["set_attributes_and_defaults","ReportIssue","ReportIssue.html#method-i-set_attributes_and_defaults","(attributes = {})","<p>Set the view model’s attributes or set those attributes to their  default\nvalues\n"],["set_attributes_and_defaults","UploadCuffdiff","UploadCuffdiff.html#method-i-set_attributes_and_defaults","(attributes = {})","<p>Set the view model’s attributes or set those attributes to their  default\nvalues\n"],["set_attributes_and_defaults","UploadFastaSequences","UploadFastaSequences.html#method-i-set_attributes_and_defaults","(attributes = {})","<p>Set the view model’s attributes or set those attributes to their  default\nvalues\n"],["set_attributes_and_defaults","UploadTrinityWithEdgeR","UploadTrinityWithEdgeR.html#method-i-set_attributes_and_defaults","(attributes = {})","<p>Set the view model’s attributes or set those attributes to their  default\nvalues\n"],["set_fpkms_for_item","TrinityFpkmFileProcessor","TrinityFpkmFileProcessor.html#method-i-set_fpkms_for_item","(item,fpkm_line)","<p>Takes a Gene or Transcript and a TrinityFpkmLine and puts the fpkm values \nfrom the TrinityFpkmLine into …\n"],["system!","SystemUtil","SystemUtil.html#method-c-system-21","(command_string)","<p>Runs the specified command_string on the system, returning true if the \ncommand was successful or raising …\n"],["update","RegistrationsController","RegistrationsController.html#method-i-update","()","<p>PUT /resource We need to use a copy of the resource because we don’t want\nto change the current user …\n"],["upload_cuffdiff","QueryAnalysisController","QueryAnalysisController.html#method-i-upload_cuffdiff","()","<p>Handles both GET and POST requests for the upload Cuffdiff page\n<p><strong>Associated ViewModel:</strong> UploadCuffdiff\n"],["upload_fasta_sequences","QueryAnalysisController","QueryAnalysisController.html#method-i-upload_fasta_sequences","()","<p>Handles both GET and POST requests for the upload fasta sequences page.\n<p><strong>Associated ViewModel:</strong> UploadFastaSequences ...\n"],["upload_trinity_with_edger","QueryAnalysisController","QueryAnalysisController.html#method-i-upload_trinity_with_edger","()","<p>Handles both GET and POST requests for the upload Trinity with EdgeR  page.\n<p><strong>Associated ViewModel:</strong> UploadTrinityWithEdgeR ...\n"],["validate_each","ArrayElementsAreNotEmptyValidator","ArrayElementsAreNotEmptyValidator.html#method-i-validate_each","(record, attribute, value)","<p>The method that actually does the validation\n"],["validate_each","ArrayOfUploadedFilesValidator","ArrayOfUploadedFilesValidator.html#method-i-validate_each","(record, attribute, value)","<p>The method that actually does the validation\n"],["validate_each","ArrayValidator","ArrayValidator.html#method-i-validate_each","(record, attribute, value)","<p>The method that actually does the validation\n"],["validate_each","DatasetBelongsToUserValidator","DatasetBelongsToUserValidator.html#method-i-validate_each","(record, attribute, value)","<p>The method that actually does the validation\n"],["validate_each","DatasetNameUniqueForUserValidator","DatasetNameUniqueForUserValidator.html#method-i-validate_each","(record, attribute, value)","<p>The method that actually does the validation\n"],["validate_each","HasFastaFileExtensionValidator","HasFastaFileExtensionValidator.html#method-i-validate_each","(record, attribute, value)","<p>The method that actually does the validation\n"],["validate_each","NameIsGeneExpDiffValidator","NameIsGeneExpDiffValidator.html#method-i-validate_each","(record, attribute, value)","<p>The method that actually does the validation\n"],["validate_each","NameIsIsoformExpDiffValidator","NameIsIsoformExpDiffValidator.html#method-i-validate_each","(record, attribute, value)","<p>The method that actually does the validation\n"],["validate_each","NameIsIsoformFpkmTrackingValidator","NameIsIsoformFpkmTrackingValidator.html#method-i-validate_each","(record, attribute, value)","<p>The method that actually does the validation\n"],["validate_each","NameIsTrinityFastaValidator","NameIsTrinityFastaValidator.html#method-i-validate_each","(record, attribute, value)","<p>The method that actually does the validation\n"],["validate_each","NucleotideFastaSequencesValidator","NucleotideFastaSequencesValidator.html#method-i-validate_each","(record, attribute, value)","<p>The method that actually does the validation\n"],["validate_each","ProteinFastaSequencesValidator","ProteinFastaSequencesValidator.html#method-i-validate_each","(record, attribute, value)","<p>The method that actually does the validation\n"],["validate_each","SampleBelongsToUserValidator","SampleBelongsToUserValidator.html#method-i-validate_each","(record, attribute, value)","<p>The method that actually does the validation\n"],["validate_each","SampleComparisonBelongsToUserValidator","SampleComparisonBelongsToUserValidator.html#method-i-validate_each","(record, attribute, value)","<p>The method that actually does the validation\n"],["validate_each","UnconfirmedUserValidator","UnconfirmedUserValidator.html#method-i-validate_each","(record, attribute, value)","<p>The method that actually does the validation\n"],["validate_each","UploadedFileValidator","UploadedFileValidator.html#method-i-validate_each","(record, attribute, value)","<p>The method that actually does the validation\n"],["validate_each","ViewModelBooleanValidator","ViewModelBooleanValidator.html#method-i-validate_each","(record, attribute, value)","<p>The method that actually does the validation\n"],["view_confirmed_users","AdminController","AdminController.html#method-i-view_confirmed_users","()","<p>Displays all the users that have been confirmed\n"],["view_unconfirmed_users","AdminController","AdminController.html#method-i-view_unconfirmed_users","()","<p>Displays all the users that have not been confirmed\n"],["welcome","HomeController","HomeController.html#method-i-welcome","()","<p>Displays the home page\n"],["README_FOR_APP","","doc/README_FOR_APP.html","","<p>Controllers &mdash; \n<p>AdminController\n<p>ApplicationController\n<p>ConfirmationsController\n"]]}}